(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    390540,       7487]
NotebookOptionsPosition[    379649,       7257]
NotebookOutlinePosition[    380512,       7285]
CellTagsIndexPosition[    380431,       7280]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["??", "HistoryData",
  CellTags->"New",ExpressionUUID->"c72af80c-99e4-4097-827b-7c9fe4c2494f"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"e7fd438b-a601-409c-842c-678f4b23594e"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"a78c7572-0db3-4f78-9aac-5b246b618c82"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"667c31a3-667e-4570-8689-71d837ee24c4"]
}], "History",
 CellID->96728299,ExpressionUUID->"0b4f210c-0002-4d2d-9c46-dc984e1b7fc9"],

Cell["Created by: gabriele on 08-16-2022 12:19:05", "AuthorDate",
 CellID->1440471419,ExpressionUUID->"d64e5682-64d0-4777-9c53-b1879f14c5a2"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1140765734,ExpressionUUID->"332a02a8-1889-452d-9256-69df41924a89"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->981109142,ExpressionUUID->"44b5ebfd-52de-4422-8d1f-372c260139ed"],

Cell["GSberveglieri/Phi4tools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->244040381,ExpressionUUID->"056d82e3-606c-482d-97b5-8a1e5f1e5622"],

Cell["GSberveglieri`Phi4tools`", "Categorization",
 CellLabel->"Context",
 CellID->1232494520,ExpressionUUID->"2b64af09-011f-42e8-8c66-f5e3b839021c"],

Cell["GSberveglieri/Phi4tools/ref/InformationDiagram", "Categorization",
 CellLabel->"URI",
 CellID->776075125,ExpressionUUID->"cb4b3202-d982-4c14-9ce6-f3790cfd29ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1961105960,ExpressionUUID->"39de9dc7-99ac-4af3-8386-db42f6d34bc8"],

Cell["XXXX", "Keywords",
 CellID->1856733639,ExpressionUUID->"e3ef3d28-22e2-497a-90dc-92330c3e11c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1945224799,ExpressionUUID->"45ea89b2-ef66-46c3-aec1-ddad1fb91ad9"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1442748066,ExpressionUUID->"2e75aa7c-e1d8-4754-863d-069f8f499789"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->1369601893,ExpressionUUID->"37a7dedf-1878-4b50-b389-f4e7ec1fddb4"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1433078531,ExpressionUUID->"d9732724-e1c8-49bb-a1a1-efb45aa68f2f"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->495006799,ExpressionUUID->"ed197f11-db8b-4bcb-9197-4f1eea6ea283"]
}, Open  ]],

Cell[CellGroupData[{

Cell["InformationDiagram", "ObjectName",
 CellID->1822639282,ExpressionUUID->"5e071591-0445-4362-9990-e16c105a8510"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"59c63be9-1db9-4dd0-b194-4f68d900f0d7"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["InformationDiagram",
    BaseStyle->"Link",
    ButtonData->"paclet:GSberveglieri/Phi4tools/ref/InformationDiagram"], "[", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox["v3", "TI"], ",", 
    StyleBox["v4", "TI"], ",", 
    StyleBox["d", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "15ae9075-c254-4fc5-b95c-16e956d486e1"],
 "\[LineSeparator]gives details about the ",
 Cell[BoxData[
  StyleBox["d", "TI"]], "InlineFormula",ExpressionUUID->
  "bcea0c94-28a6-44d7-8c44-4b08fccf03c5"],
 "-th diagram of the ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula",ExpressionUUID->
  "ce560edd-dacf-4a2d-a6ab-b6d4158236af"],
 "-point function ",
 Cell[BoxData[
  SuperscriptBox["\[CapitalGamma]", 
   RowBox[{"(", 
    StyleBox["n", "TI"], ")"}]]], "InlineFormula",ExpressionUUID->
  "5cb6b242-1851-4f46-81c7-088d13540707"],
 " with ",
 Cell[BoxData[
  StyleBox["v3", "TI"]], "InlineFormula",ExpressionUUID->
  "ba8ac3b2-ec47-4e95-8aaf-50f7b1e8681c"],
 " cubic vertices and ",
 Cell[BoxData[
  StyleBox["v4", "TI"]], "InlineFormula",ExpressionUUID->
  "6a7eba32-7555-4e22-a029-c1031554d545"],
 " quartic vertices at zero external momentum.\n",
 Cell["   ", "ModInfo",ExpressionUUID->"e4bd1c49-f8fb-4f0e-bfaa-6683918318ec"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["InformationDiagram",
    BaseStyle->"Link",
    ButtonData->"paclet:GSberveglieri/Phi4tools/ref/InformationDiagram"], "[", 
   StyleBox["index", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "41478bef-cfe7-429f-a8f0-655233c850b1"],
 "\[LineSeparator]gives the details of the diagram having a specific Nickel \
",
 Cell[BoxData[
  StyleBox["index", "TI"]], "InlineFormula",ExpressionUUID->
  "46a00070-dc83-4c03-9336-122b07bdf2b1"],
 ".\n",
 Cell["   ", "ModInfo",ExpressionUUID->"14c3e91b-6c4d-4d96-92a0-8c59a38af392"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["InformationDiagram",
    BaseStyle->"Link",
    ButtonData->"paclet:GSberveglieri/Phi4tools/ref/InformationDiagram"], "[", 
   StyleBox["graph", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "7f8aeaaf-ffa8-48d4-b1dd-3fef06b734be"],
 "\[LineSeparator]gives the details of the diagram matching the provided ",
 Cell[BoxData[
  StyleBox["graph", "TI"]], "InlineFormula",ExpressionUUID->
  "948f528d-7bee-4f0b-ba9d-e4d37addce9f"],
 "."
}], "Usage",
 CellChangeTimes->{
  3.869633989139896*^9, {3.869634063744433*^9, 3.8696341198609447`*^9}, {
   3.869634339612199*^9, 3.869634354739093*^9}, {3.8696410750133667`*^9, 
   3.869641076500449*^9}, {3.869889151341343*^9, 3.8698891593146353`*^9}, {
   3.8831392314740047`*^9, 3.883139328313244*^9}},
 CellID->1850102269,ExpressionUUID->"cb195864-f3d7-44d9-8507-b3294b5987f2"],

Cell["The following options can be given:", "Notes",
 CellChangeTimes->{
  3.868500690884481*^9, {3.868500725349276*^9, 3.868500735159182*^9}},
 CellID->575916847,ExpressionUUID->"88619ea5-6830-4472-87d4-c9371689862b"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "a646a717-18d6-465b-91b6-8fbacd2d6733"], "\"\<ShowIntegrand\>\"", 
    ButtonBox["False",
     BaseStyle->"Link"], Cell[
    "show the symbolic form of the integrand (boolean)", "TableText",
     ExpressionUUID->"601eecb9-5e67-4c34-8811-75068a1ebea6"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "04b8c31c-7d45-44ad-bb6a-84b95ef3b8a3"], "\"\<Substitutions\>\"", 
    "\"\<Nothing\>\"", Cell[
    "the type of subdiagrams to substitute", "TableText",ExpressionUUID->
     "464586f0-4f30-4bbc-8644-1a033927fe99"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "e872a448-9c82-40f1-8e40-a022bfe6734b"], "\"\<Tensor\>\"", 
    ButtonBox["None",
     BaseStyle->"Link"], Cell[
    "the model used for the tensorial structure", "TableText",ExpressionUUID->
     "084f2b18-5d1c-4886-928c-7b1606069fe2"]}
  }]], "3ColumnTableMod",
 CellChangeTimes->{
  3.8685032297182283`*^9, 3.868504145850463*^9, {3.868507773640168*^9, 
   3.8685077749845324`*^9}, {3.869889220519979*^9, 3.869889356570621*^9}},
 CellID->1248472906,ExpressionUUID->"d13dd38d-5c00-4280-8e60-7a72a5135560"],

Cell[TextData[{
 "Possible explicit settings for the ",
 Cell[BoxData[
 "\"\<Substitutions\>\""], "InlineFormula",ExpressionUUID->
  "840d8e57-7b6f-4f53-b5f5-6f1da41f177e"],
 " option include:"
}], "Notes",
 CellChangeTimes->{{3.868503290712326*^9, 3.868503291121231*^9}},
 CellID->212215023,ExpressionUUID->"bee18058-31b0-4b9c-89f6-07054edbaca9"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "afaea504-548f-4061-9140-d599a8878be0"], "\"\<Nothing\>\"", Cell[
    "no substitution", "TableText",ExpressionUUID->
     "c152678e-c740-4e7c-94d2-8fa4b7fc147f"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "582cb10a-364f-4598-be26-3d9cd51ffd1f"], "\"\<Sunsets\>\"", Cell[
    "just sunsets subdiagrams", "TableText",ExpressionUUID->
     "3cc51091-9538-482c-80fd-8972ff556a57"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "ae0edb0b-5603-4197-a109-8da44e5c19cf"], "\"\<Analytics\>\"", Cell[
    "all analytic subdiagrams", "TableText",ExpressionUUID->
     "a30aabb9-cef2-438b-97f7-b19e0c4295bb"]}
  }]], "2ColumnTableMod",
 CellChangeTimes->{{3.868504056815343*^9, 3.868504093332794*^9}, {
  3.868936468618576*^9, 3.868936519882766*^9}},
 CellID->1891466392,ExpressionUUID->"acf7e9ac-6f50-46e1-89ab-040ed651ddbb"],

Cell[TextData[{
 "Possible explicit settings for the ",
 Cell[BoxData[
 "\"\<Tensor\>\""], "InlineFormula",ExpressionUUID->
  "a8064498-19ec-48a7-824a-1200cc1e05d4"],
 " option include:"
}], "Notes",
 CellChangeTimes->{3.868504109696299*^9},
 CellID->1272902334,ExpressionUUID->"8a374683-6a27-491b-b2f2-d3d1c1ff3b03"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "823a65fb-ae4e-4868-b13f-642eb3b59ca4"], "\"\<Identity\>\"", Cell[
    "the model with a single field", "TableText",ExpressionUUID->
     "c7be501b-b4a5-4772-ab7f-5558ae791b5a"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "33a3d318-4b5d-4b70-b286-6f64e5e9a8ae"], "\"\<O(N)\>\"", Cell[
    "the O(N)-symmetric model", "TableText",ExpressionUUID->
     "e29e92aa-df58-4118-93fb-5f3a2a38f032"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "ea280683-e685-4827-a596-cdd335bf41e3"], "\"\<Cubic\>\"", Cell[
    "the O(N) model broken to cubic symmetry", "TableText",ExpressionUUID->
     "395fad59-f2a3-40bd-99e9-f7f2cdbf829f"]}
  }]], "2ColumnTableMod",
 CellChangeTimes->{{3.868504153919855*^9, 3.868504194840109*^9}, {
  3.869889400859975*^9, 3.869889469233639*^9}},
 CellID->957078751,ExpressionUUID->"e30504ce-a509-43c2-8d49-7089f75c9cb9"],

Cell[TextData[{
 "The integrand is provided by ",
 Cell[BoxData[
  ButtonBox["IntegrandDiagram",
   BaseStyle->"Link",
   ButtonData->"paclet:GSberveglieri/Phi4tools/ref/IntegrandDiagram"]], 
  "InlineFormula",ExpressionUUID->"a9b8e890-7ec4-4545-b1fb-2531687fe7fa"],
 " and contains the normalized multiplicity factor."
}], "Notes",
 CellChangeTimes->{{3.869901373059808*^9, 3.869901452179801*^9}},
 CellID->824107932,ExpressionUUID->"fefaec85-28d2-4607-b36b-e91dfe1b89a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tech Notes", "TechNotesSection",
 CellID->1055865968,ExpressionUUID->"3e2cd55f-c175-4aed-941a-992de98a8448"],

Cell[TextData[ButtonBox["Feynman Diagram Evaluation",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GSberveglieri/Phi4tools/tutorial/FeynmanDiagramEvaluation"]], "Tutorials",
 CellChangeTimes->{{3.88354885525525*^9, 3.883548888083745*^9}},
 CellID->470718188,ExpressionUUID->"be4ae7a8-6e21-473c-9712-ccf734762df8"],

Cell[TextData[ButtonBox["Perturbative Series Generation ",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GSberveglieri/Phi4tools/tutorial/PerturbativeSeriesGeneration"]], \
"Tutorials",
 CellChangeTimes->{{3.88354885525525*^9, 3.883548888083745*^9}, {
  3.885025733316227*^9, 3.885025759131979*^9}},
 CellID->761534299,ExpressionUUID->"519d3bdc-a18c-431b-a9bf-e69e732f8004"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1135641973,ExpressionUUID->"f2a00c47-e2bb-499d-bdf0-1ad3179c719f"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1607052338,ExpressionUUID->"084c7ec0-1042-4809-80d1-fad8683212be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1105271984,ExpressionUUID->"5695bab4-bb51-42db-a128-ce16256fef9f"],

Cell["XXXX", "RelatedLinks",
 CellID->80557085,ExpressionUUID->"3ac8f260-8d97-4e15-a59e-8ee336a48c4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1589544632,ExpressionUUID->"19affa99-553c-48b5-aee6-ead0e43971fb"],

Cell[TextData[Cell[BoxData[
 ButtonBox["NickelIndex",
  BaseStyle->"Link",
  ButtonData->
   "paclet:GSberveglieri/Phi4tools/ref/NickelIndex"]], \
"InlineFormula",ExpressionUUID->"10d3e9d0-a709-4991-9f8e-19cfc8d6e71f"]], \
"SeeAlso",
 CellChangeTimes->{{3.869889514299917*^9, 3.86988959225207*^9}},
 CellID->1280782454,ExpressionUUID->"89a9ed5d-5e6a-4daf-8562-23323fc8df5c"],

Cell[TextData[Cell[BoxData[
 ButtonBox["IntegrandDiagram",
  BaseStyle->"Link",
  ButtonData->
   "paclet:GSberveglieri/Phi4tools/ref/IntegrandDiagram"]], \
"InlineFormula",ExpressionUUID->"9533844e-9df3-4580-a472-7dfed3351702"]], \
"SeeAlso",
 CellChangeTimes->{{3.869889514299917*^9, 3.8698895998793573`*^9}},
 CellID->159419783,ExpressionUUID->"575b65a8-62df-40d7-876e-1ce11298785f"],

Cell[TextData[Cell[BoxData[
 ButtonBox["SymmetryFactorDiagram",
  BaseStyle->"Link",
  ButtonData->
   "paclet:GSberveglieri/Phi4tools/ref/SymmetryFactorDiagram"]], \
"InlineFormula",ExpressionUUID->"516504b1-7108-41c4-9a7d-9ee7e8034c87"]], \
"SeeAlso",
 CellChangeTimes->{{3.8819242309094973`*^9, 3.881924252683601*^9}},
 CellID->676245751,ExpressionUUID->"b6d3d9b0-bafb-443d-bf5f-070ecd9e4ea3"],

Cell[TextData[Cell[BoxData[
 ButtonBox["ValueDiagram",
  BaseStyle->"Link",
  ButtonData->
   "paclet:GSberveglieri/Phi4tools/ref/ValueDiagram"]], \
"InlineFormula",ExpressionUUID->"dbe89e5c-27b4-4da3-a508-cbcf3b9b9de1"]], \
"SeeAlso",
 CellChangeTimes->{{3.869889516453705*^9, 3.869889530087289*^9}},
 CellID->1114387251,ExpressionUUID->"39017421-d359-4b31-a7c7-fbf8dee2338b"],

Cell[TextData[Cell[BoxData[
 ButtonBox["VisualizeDiagram",
  BaseStyle->"Link",
  ButtonData->
   "paclet:GSberveglieri/Phi4tools/ref/VisualizeDiagram"]], \
"InlineFormula",ExpressionUUID->"1fa3683e-7064-45ee-a2b9-7cc9b867af68"]], \
"SeeAlso",
 CellChangeTimes->{{3.869889549883622*^9, 3.8698895565870333`*^9}},
 CellID->1196792586,ExpressionUUID->"d55f33dd-2824-4361-859a-b8f3fe1e03a9"],

Cell[TextData[Cell[BoxData[
 ButtonBox["Dataset",
  BaseStyle->
   "Link"]], \
"InlineFormula",ExpressionUUID->"616e3656-d9e8-4623-8d68-a2de4d6ffd56"]], \
"SeeAlso",
 CellChangeTimes->{{3.8696340341143913`*^9, 3.869634050254743*^9}, {
  3.869889490914195*^9, 3.8698895109461393`*^9}},
 CellID->16121505,ExpressionUUID->"59afdbdb-f529-459c-8984-ea2a887aa22f"],

Cell[TextData[Cell[BoxData[
 ButtonBox["Association",
  BaseStyle->
   "Link"]], \
"InlineFormula",ExpressionUUID->"fd0732f3-d10c-4cb7-824d-fd426a546a26"]], \
"SeeAlso",
 CellChangeTimes->{{3.8696340341143913`*^9, 3.869634050254743*^9}, {
  3.869889490914195*^9, 3.869889508324369*^9}},
 CellID->1633265002,ExpressionUUID->"91bbbab6-8ebb-459a-b322-d245d6220d5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellChangeTimes->{{3.843042374232973*^9, 3.843042375545676*^9}},
 CellID->2141199699,ExpressionUUID->"78f9aa64-a828-4b3a-9e8c-afb2ac93e0da"],

Cell["XXXX", "MoreAbout",
 CellID->1910053517,ExpressionUUID->"c8cbb1c7-f7a4-4830-9177-1374ffedaf22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->599104050,ExpressionUUID->"8a7696d1-c791-40ee-9ae7-8d170dcc5ac1"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<GSberveglieri`Phi4tools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->337745299,ExpressionUUID->"7aa46f7f-2051-4d8c-ba42-0dbab35cbef8"],

Cell["Get basic information about a diagram:", "ExampleText",
 CellChangeTimes->{{3.869889884209017*^9, 3.869889921382763*^9}},
 CellID->220034425,ExpressionUUID->"01de6e26-5791-40c4-b292-d63c00f1bca9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diag", "=", 
  RowBox[{"InformationDiagram", "[", 
   RowBox[{"4", ",", "0", ",", "5", ",", "18"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.869890312103817*^9, 3.8698903128478823`*^9}, {
  3.883136768302277*^9, 3.883136768401393*^9}},
 CellLabel->"In[102]:=",
 CellID->1588595559,ExpressionUUID->"a4c8403a-8a3b-4910-a12a-0440cba3ff65"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "External Legs" -> 4, "Cubic Vertices" -> 0, "Quartic Vertices" -> 5, 
       "List Number" -> 18, "Nickel Index" -> "ee12|233|34|4|ee|", "Diagram" -> 
       Graph[{"o1", 0, "o2", "o3", 4, "o4", 1, 2, 3}, {
         Null, {{1, 2}, {3, 2}, {4, 5}, {6, 5}, {2, 7}, {2, 8}, {7, 8}, {7, 
          9}, {7, 9}, {8, 9}, {8, 5}, {9, 5}}}, {
         EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o4", 4] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o3", 4] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
          VertexSize -> {0.15}}], "Value" -> 2|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[190.4], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Integer]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[190.4], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Integer]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 7, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["External Legs", 
                  Style[
                  "External Legs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["External Legs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cubic Vertices", 
                  Style[
                  "Cubic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cubic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Quartic Vertices", 
                  Style[
                  "Quartic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Quartic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["List Number", 
                  Style[
                  "List Number", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["List Number"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nickel Index", 
                  Style[
                  "Nickel Index", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Nickel Index"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ee12|233|34|4|ee|", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Diagram", 
                  Style[
                  "Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"o1", 0, "o2", "o3", 4, "o4", 1, 2, 3}, {
                    Null, {{1, 2}, {3, 2}, {4, 5}, {6, 5}, {2, 7}, {2, 8}, {7,
                     8}, {7, 9}, {7, 9}, {8, 9}, {8, 5}, {9, 5}}}, {
                    EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o4", 4] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o3", 4] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
                    VertexSize -> {0.15}}]]}, 
                    TagBox[
                    GraphicsGroupBox[
                    GraphicsComplexBox[CompressedData["
1:eJw9z30s1HEcB/DfnUM3eSgPuVrjKk8nY3Q3Ip9vqGmMZMzWcA/YeljnodTM
Umpks/XzuBKru1o40e83JfVH3xOd56ddcZiGaWTIJoZL+tpan+29zz/vvbeX
UK68kMqlKMqDZPeHlQbI++lRsBo4mpOdaoQRfc6b1mtLUCf2DxGLF4D6d3lv
mfyHbsOQPeudcmvMAuVetDXlkb5BNNOYpzRH9maXXQSSBQgqMg/k91ohsaak
T3VsGDTxlRHRhvX/O/ZznlKn3j/gO1z52cx6Hnh1kQuLSSaIosd1klI/yCww
1dsUbABqF4TND6th0s86Ub26AT7qxFOJqBbOdxj6O+WbYJOfpljhNQAdoYoH
/SbQgxNVaYeb4Dg/R6oL2wJqyixhLZSBovLmZsG7LTD0yCSFQhYYiebpmocR
WtnC1u8vWcidHjviUGME+mbsXJuehaG4k2VZvyk09CRou2KChZ5LSRY8CQcZ
dg6d+/qaBbXo24tMJQe53+9+XOLJQo62MqmmjoPoubVgQTQDtF9Fsnyag7T0
l3uT4iY40els8UzARUiX61Pi1ABLDSo7cQwXTclUSmFiLZxBCWXUAy5Kb7nj
2LWiBpFr3qYb8Us5q5rn3Wo8EbW4/pH4h17ZcrfFtTjScZn/g/h99v38dHVD
g8vBVJZC/MzEWYf3Vk1Y68JVLO/6Lb33FAYyOCMmaySU+B/VcxU7B1jsrM/k
C0VGCHeJ2x9azWI744fN08SP2m7oTLpYXD2juV1E/FRNMeOtZTG3NUQrIH73
Ue3d2DIWO/CDWwqJP3ylaueXJYs7BsaTWeJPN0VChQ+DS706Z68Tv/RglFfI
eiP2zfCsZ4h/qs+w1jupwVcCaFko8VNLg4P+glostKlw3Uv8NlbFI+0aNf4L
8xcxDA==
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{1, 2}, 0.06756564236517916]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{2, 3}, 0.06756564236517916]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[{2, 7}, 0.06756564236517916]}, {
                    Arrowheads[0.], 
                    ArrowBox[{2, 8}, 0.06756564236517916]}, 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{4, 5}, 0.06756564236517916]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{5, 6}, 0.06756564236517916]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[{5, 8}, 0.06756564236517916]}, {
                    Arrowheads[0.], 
                    ArrowBox[{5, 9}, 0.06756564236517916]}, {
                    Arrowheads[0.], 
                    ArrowBox[{7, 8}, 0.06756564236517916]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {1.9245310498766777`, 0.16352782868618}, 9}], 
                    0.06756564236517916]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {1.924629264423, -0.1632291966621432}, 9}], 
                    0.06756564236517916]}, {
                    Arrowheads[0.], 
                    ArrowBox[{8, 9}, 0.06756564236517916]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.06756564236517916], 
                    DiskBox[2, 0.06756564236517916], 
                    DiskBox[3, 0.06756564236517916], 
                    DiskBox[4, 0.06756564236517916], 
                    DiskBox[5, 0.06756564236517916], 
                    DiskBox[6, 0.06756564236517916], 
                    DiskBox[7, 0.06756564236517916], 
                    DiskBox[8, 0.06756564236517916], 
                    DiskBox[9, 0.06756564236517916]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Value"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{470., {183.8544921875, 189.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{470., {183.8544921875, 189.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.869889845751457*^9, 3.86989526748038*^9, 
  3.8813977543354588`*^9, 3.8819240847044067`*^9, 3.883136626585404*^9, 
  3.883136769107366*^9, 3.8850301409551067`*^9},
 CellLabel->"Out[102]=",
 CellID->1700021695,ExpressionUUID->"57499ba7-9e9e-4b80-916a-2b83c35bdd1e"]
}, Open  ]],

Cell["\<\
The diagram properties can be accessed through the corresponding key:\
\>", "ExampleText",
 CellChangeTimes->{{3.869890335592039*^9, 3.869890404234087*^9}},
 CellID->1425865463,ExpressionUUID->"35717527-6390-4eec-bd86-50dfba31f0d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diag", "[", "\"\<Nickel Index\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.869895271855689*^9, 3.869895279307535*^9}},
 CellLabel->"In[10]:=",
 CellID->661138279,ExpressionUUID->"4233c141-947a-4502-8beb-a3f77ba775bc"],

Cell[BoxData["\<\"ee12|233|34|4|ee|\"\>"], "Output",
 CellChangeTimes->{3.8698952801298933`*^9, 3.881397754428733*^9, 
  3.881924084785749*^9, 3.883136626754251*^9, 3.8831367732871847`*^9},
 CellLabel->"Out[10]=",
 CellID->821459548,ExpressionUUID->"0fa27bf7-a0e3-4539-8a4a-b65fe0972da7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diag", "[", "\"\<Value\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.869890425285224*^9, 3.869890431945724*^9}, {
  3.883136775528232*^9, 3.8831367760279903`*^9}},
 CellLabel->"In[11]:=",
 CellID->2032435858,ExpressionUUID->"f6c245a2-7033-48c4-9d65-8155723031f8"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.869890433029306*^9, 3.869890448560053*^9}, 
   3.881397754444366*^9, 3.881924084802162*^9, 3.8831366267689753`*^9, 
   3.883136776561159*^9},
 CellLabel->"Out[11]=",
 CellID->2143826009,ExpressionUUID->"254b0cba-aa56-48c3-ab50-82b0cec92202"]
}, Open  ]],

Cell["Get the properties of a diagram from an index:", "ExampleText",
 CellChangeTimes->{{3.8831367836521072`*^9, 3.883136833236642*^9}, {
   3.883138846216357*^9, 3.8831388777488832`*^9}, 3.885810523517391*^9},
 CellID->468305460,ExpressionUUID->"423f3bcd-5554-456d-b8de-1cca8b5547fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InformationDiagram", "[", "\"\<1112|3|344|55|55||\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.883138889416656*^9, 3.8831388895966578`*^9}, {
  3.8831390701149397`*^9, 3.8831390753271914`*^9}},
 CellLabel->"In[16]:=",
 CellID->779569763,ExpressionUUID->"b77a04ea-0191-4f38-a983-1b398d25af87"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "External Legs" -> 0, "Cubic Vertices" -> 0, "Quartic Vertices" -> 6, 
       "List Number" -> 4, "Nickel Index" -> "1112|3|344|55|55||", "Diagram" -> 
       Graph[{0, 1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 2}, {1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {3, 
          5}, {4, 6}, {4, 6}, {5, 6}, {5, 6}}}, {
         GraphLayout -> "SpringEmbedding", VertexSize -> {0.15}}], "Value" -> 
       Around[-0.0190368081088805244`17.279594132236117, 5.03*^-17]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[201.60000000000002`], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], TypeSystem`AnyType}], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[201.60000000000002`], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], TypeSystem`AnyType}], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     7, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["External Legs", 
                  Style[
                  "External Legs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["External Legs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cubic Vertices", 
                  Style[
                  "Cubic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cubic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Quartic Vertices", 
                  Style[
                  "Quartic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Quartic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["List Number", 
                  Style[
                  "List Number", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["List Number"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nickel Index", 
                  Style[
                  "Nickel Index", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Nickel Index"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["1112|3|344|55|55||", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Diagram", 
                  Style[
                  "Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{0, 1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 2}, {1, 2}, {1, 3}, {2, 4}, {3, 4}, {3,
                     5}, {3, 5}, {4, 6}, {4, 6}, {5, 6}, {5, 6}}}, {
                    GraphLayout -> "SpringEmbedding", 
                    VertexSize -> {0.15}}]]}, 
                    TagBox[
                    GraphicsGroupBox[
                    GraphicsComplexBox[CompressedData["
1:eJw9lHk01AsfxidLNyV7KeaWVLRoEWlCnilaRN5BQrdFlKPtTRKVLaTmvGnn
tqAo2UpmKKT4SRoyjSZZ5lKJMmZhFiTXNDOv+8f7fs95zvd8v89fn3Oe88wL
PuZzQINEIp2f0D87THd9cYpChT1bKZfGpsnRmFeSwF6iBmOcYnxreh4GouND
jDWlcN7WUEvRksP2I++oo5kUpP/Noaded/oPoSm4i/DQkf///3XNm7hV+x8g
1artkVeGGqFnzlwQ5ElQN3nqk8mv1Ig25jeuYQ3CIW+40bNHjYELbOPFvQM4
4vLi6/Rfavh9jTnmqhCjZZGJftYUEtWhsOSavpEYpjxSbLABidoXkX7J1FqE
JrZzls8MEvV+mGES31EIB1fa+UOmJOqG0D2bp3gJ4J5++9sXCxK1dzlRrDzW
jgLTNf6/T9zQTvFXp7fips/PhiQyibrw06Q3HS9bEESdEWA4k0R12nfL/F4f
F941S3jvdEnUy+e2VPAsmxHnI6mvIpGos7dcjypMakKPhH+h/psakZwcrfYB
FihPv7jcqlXjMnukOS7kNcZUhpLKAyokyfnW4nsS0Op1HqZuUEGHGWOWXj3B
r2fyoGuBCkHX1esseAO46pARW6Grgqtmy1ETmRjHV7Fil48r0TjcMV2hLcZk
PY0sj0ElfB3mP99jJkJvclL8TL4SrJweadMyIbLp1QdufFdiJLW+nk0VgGVD
s4j9qYRb7MWCc37tyDaPHnqkUCI5eqFdY0wrtDSl9qnaKkwK+Z0c+qAFV/Y1
6pnOUGH3qMA4isMFK3K1p+sSFVwMchjkUQ6UusoQrY0q9B0Pnnt+ZxMiHvPj
t07wVbqObfVoYiE/1TxR46IKv/LzaPTNr7FfN2SVASHG9pW396dEyHDIZMh+
UChCzG9zpWtpMgjH9s+pNhTBuDrFdZadDFPSZRK1gxC0u4E5tuYyfLpxevGa
nQI8C/RbkTZFhrGp/PN9Mf3YYarBTx+VIoFeUXA5kw+hn3/aC74UvmHm7PKX
ffgRkvLufo8UXRzXHwyiBRldChWzT4pqa0/PKaQPyNdOfbNbLAWLqpHSndSM
MPpATZNCiorBoAvdOmwY1Zbfip4mA2npD8Wcmw1oPpuYsnuODG126osFNvUQ
nN7/46KDDG+Puo8lvquFzbl5N0d8ZWDYOXD85FUYiF006XyUDF8OWLlxJ/jN
7c4kqP6Uo5dbldApEqFraaLwynM59u7ldHKNRJjj4HJxrF2OtJ73LnYUIRxX
zFNYSeXgy0bMk/8QYFQq7tfVGIJlZirZNa4fHw/bzLunP4STs/I7RrP4sC/+
lNVmOoQDG5cmW9b0wbFuQeIjsyFo0kMO0OtaoKvaa1ZGHkLh5qVFPI0PMNKO
Lrea8CNSMrv86M3YlZtzaa3REHr2eXnr67Phs2Obt0xrCPa7I5wGMhpQbuje
7TMkRwknO+7nynqMDJHXHemUo3jvkflruLVILUi+trVajrNq2h87flahNEGH
rL4jR31wVUfbGzG42jNzewOyCWG3+9zqARFolttZSutc4jPV7saogQjhwT4m
Y175xLqOU75adkKsHLaqG2YXEmIXy7cHfQUI7zldFJ31iDg5/98BjyL6wbBp
WRZe95hYtuWYkdc1PgxesNpWOBYT+s6uoR0lfSBdKX1xTKuYWPn+YSQ/rgVU
oybpqw0PCf2ZGzw/vODi6jCLn7M3lwip3JC97icHKxltYQXv7xPOXmnVjNgm
cMnYXHcjmxiiVK6ZNrUBtSPPnc/tzCC2yyX5/jmvQaI7mRFOaUTsTr36O261
IB0V1PHuXiDMtRYG5oqfg9S9x3dTaxDxeNXT3jefxBAsVPRGHc/FNee2l8Y6
Yqz0TXgi8ChE18zPyd9tRZApeqcaJRVjuF50r8JfiEWzDb2q6AzkECdc9GIE
2LUkKXhcwYTpwkbtw5n90IrcdmJwdhmsGysavF/yUTlj0ypRTxluilPsNnf1
weBhg8MZ36dwWb5Un9XagvBvL8je9pXQnPmxnGf4Aaf+frPY9l+V6Ksp8nO+
2wzPUraft3ElDLw7r28wZyM3da5J29kKsKQJB3mZDTg7Y3Su8a1ybHX/85D+
wnpYcKa5pwc+wyyOk+OPZ7UwKNa1nMUqg3fyMGPBgyq03h28+p8vTNAo6Yz9
slwUpoTxLG9LULvtXuL6U4XwNVJyg8sHEf7d9lUgrRitM34xD3IHUPA9J9jO
iQG50vgh0S8Gj2efvzGSiXHbzsOSXyIUaNp7F/mUQvG3o17iRG54V/4q+9xW
iqpli+ia84VoHCm2uK4sxf2wiiiN1QIU8OPfnc4vBaUwsNPaYqL/af6vbp4o
RWrS4yiKWyvo3dTRdd+ZOHNlatbJgy2gxNM8Xv3NwLhOYOjYVS4sVtTbBB4s
QWztWitmNAdfW97mnF36GIebStj+7W8hc2N7fHcqgFRurZxKZYGUYveKl/kA
Lw0Ux0TldQh32ULeK8kheranTbPIkCBI1Z136FIekU52F3RUDoKW+uXX5Lgi
Isoq/6nbx4n+F/AudFcVE/ICrT0S0URuOjtPnbNkECZpoZF7SGJQnNnzJ01n
Er4fpv8110SEgOIeyc5MJtHU4XykxkqIAFedcWcuk4h0C61iUQQ45U3x8rMq
JTqDKvYxrNtBHwjpyVYxiaL2NpcnHq0ICKqJPxrDJBa5MFaVhbeAvpponZLF
IGyaj0fzbnKRnRRgMdjwhIg/8kvnyDkOarM2kb/mPCLkurvaX/e8hcFvTz81
vM0nfpgF7Ox2ZyFbXjhNvP4BcXdbkXN3TR3+CxZsQ+g=
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    Arrowheads[0.], {
                    ArrowBox[
                    
                    BezierCurveBox[{
                    1, {2.11029339698683, 0.5561453672841288}, 2}], 
                    0.07243814892839145], 
                    ArrowBox[{1, 2}, 0.07243814892839145], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    1, {1.7740613617982168`, 0.5523496812261194}, 2}], 
                    0.07243814892839145], 
                    ArrowBox[{1, 3}, 0.07243814892839145], 
                    ArrowBox[{2, 4}, 0.07243814892839145], 
                    ArrowBox[{3, 4}, 0.07243814892839145], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.48600114814219114`, 0.9053264490224254}, 5}], 
                    0.07243814892839145], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    3, {0.4864085729519096, 1.2229737433169174`}, 5}], 
                    0.07243814892839145], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.47974784551334554`, -0.14089155240667714`}, 6}], 
                    0.07243814892839145], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {0.49220384377276183`, 0.17876537161752043`}, 6}], 
                    0.07243814892839145], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {0.17050562646612133`, 0.5507815955874564}, 6}], 
                    0.07243814892839145], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {-0.16722136153757136`, 0.5518617295450511}, 6}], 
                    0.07243814892839145]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.07243814892839145], 
                    DiskBox[2, 0.07243814892839145], 
                    DiskBox[3, 0.07243814892839145], 
                    DiskBox[4, 0.07243814892839145], 
                    DiskBox[5, 0.07243814892839145], 
                    DiskBox[6, 0.07243814892839145]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Value"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  
                  TemplateBox[{"-0.0190368081088805", "2", "5"}, "AroundSeq", 
                   SyntaxForm -> PlusMinus], 
                  
                  Around[-0.0190368081088805244`17.279594132236117, 
                   5.03*^-17]], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{470., {202.8544921875, 208.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{470., {202.8544921875, 208.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883139075856764*^9},
 CellLabel->"Out[16]=",
 CellID->173204240,ExpressionUUID->"9ab9947c-468a-4263-87ea-1bf232b78317"]
}, Open  ]],

Cell["Get the properties of a diagram using a graph as input:", "ExampleText",
 CellChangeTimes->{{3.8831367836521072`*^9, 3.883136833236642*^9}, {
   3.883138846216357*^9, 3.8831388777488832`*^9}, {3.883139124867453*^9, 
   3.883139126011231*^9}, {3.8831391809600983`*^9, 3.8831391864765873`*^9}, 
   3.885810532094019*^9},
 CellID->1009250530,ExpressionUUID->"a42c3ece-d4c6-4c21-976b-636e2a43dcf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InformationDiagram", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{"o1", 0, "o2", "o3", 1, "o4", 3, 2}, {
       Null, {{1, 2}, {3, 2}, {4, 5}, {6, 7}, {2, 5}, {2, 8}, {5, 8}, {5, 
        7}, {8, 7}, {8, 7}}}, {
       EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
            Dashing[{0, Small}], 
            Thickness[Large]], UndirectedEdge["o4", 3] -> Directive[
            Dashing[{0, Small}], 
            Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
            Dashing[{0, Small}], 
            Thickness[Large]], UndirectedEdge["o3", 1] -> Directive[
            Dashing[{0, Small}], 
            Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
        VertexSize -> {0.15}}]]}, 
     TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAgNNNETzAzz8AAAAAAAAAANIXeOwG
8Os/SOVpEAfF6z8AAAAAAAAAAOOa0/nfF/c/txuxwVE5AEAWtUMMe+ECQCq6
blUQLP0/rKb80fJS9T+0H91l5/sMQIQr76DpH94/D/4c0OWdBUB3O7Cj0vHo
Pwai+opOk/w/Rc3iA0if4D9KGjO3besEQGATpeNi++Y/vPn3Fou9BECGJUP4
soDmPycRlIo8jgRAHQGfYfoO5j9hpXUUnl0EQCV9vnR8puU/TUXufcwrBED4
3cMPd0flP0SNJ0bl+ANASF5MdSLy5D/kP6yQBsUDQPCpICuxpuQ/bwuQE0+Q
A0COA0vcT2XkPzfG6ajPoQBArAosaRgR4T8zR5qaXmwAQA7Shcvt2eA/fgxk
n1M2AEAuFMyIGq3gP+IbbW2d//8/uLZIK7mK4D9iWmRQ4JH/P2KyGw7ecuA/
rfAW4bAj/z/iqS1Rl2XgP3T+nVxQtf4/YQDT0Oxi4D/4PSIdAEf+P+tiJCHg
auA/FjAJBw3EBEDSpW6GOibpP9hPS+fkjARAXAjA1i0u6T+71g6ltFUEQNpe
ZVaDK+k/4SFo7ZweBEBaVneZPB7pPyHB416+5wNAA1JKfGEG6T+UQjZ2ObED
QI70xh4A5Og/4AcAey57A0CuNg3cLLfoP9uIsGy9RQNAEP5mPgKA6D+jQwoC
PlcAQC8FSMvKK+U/Lw/uhIYiAEDNXnJ8aerkP56D5Z5P3f8/dapGMvie5D+K
E1gvgXf/P8Qqz5ejSeQ/YlNJAt4T/z+Wi9QynurjP9d7DBahsv4/ngf0RSCC
4z+sqkT9A1T+PzbjT69nEOM/kGnOvD74/T9c9e3Dt5XiP4aJJ1w=
        "], {
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
          {Thickness[Large], Dashing[{0, Small}], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.06106216472119722]}}, 
          {Thickness[Large], Dashing[{0, Small}], 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.06106216472119722]}}, 
          {Arrowheads[0.], ArrowBox[{2, 5}, 0.06106216472119722]}, 
          {Arrowheads[0.], ArrowBox[{2, 8}, 0.06106216472119722]}, 
          {Thickness[Large], Dashing[{0, Small}], 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.06106216472119722]}}, 
          {Arrowheads[0.], ArrowBox[{5, 7}, 0.06106216472119722]}, 
          {Arrowheads[0.], ArrowBox[{5, 8}, 0.06106216472119722]}, 
          {Thickness[Large], Dashing[{0, Small}], 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.06106216472119722]}}, 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            7, {2.286798102792431, 0.498831542918055}, 8}], 
            0.06106216472119722]}, 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            7, {2.2012639630679787`, 0.8001313622921077}, 8}], 
            0.06106216472119722]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[1, 0.06106216472119722], DiskBox[2, 0.06106216472119722], 
          DiskBox[3, 0.06106216472119722], DiskBox[4, 0.06106216472119722], 
          DiskBox[5, 0.06106216472119722], DiskBox[6, 0.06106216472119722], 
          DiskBox[7, 0.06106216472119722], DiskBox[8, 0.06106216472119722]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None], "]"}]], "Input",
 CellChangeTimes->{{3.883138889416656*^9, 3.8831388895966578`*^9}, {
  3.8831390701149397`*^9, 3.8831390753271914`*^9}, {3.883139133232876*^9, 
  3.883139169756426*^9}},
 CellLabel->"In[22]:=",
 CellID->589141683,ExpressionUUID->"81146a86-fffa-4068-98bc-4697b4261965"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "External Legs" -> 4, "Cubic Vertices" -> 0, "Quartic Vertices" -> 4, 
       "List Number" -> 4, "Nickel Index" -> "ee12|e23|33|e|", "Diagram" -> 
       Graph[{"o1", 0, "o2", "o3", 1, "o4", 3, 2}, {
         Null, {{1, 2}, {3, 2}, {4, 5}, {6, 7}, {2, 5}, {2, 8}, {5, 8}, {5, 
          7}, {8, 7}, {8, 7}}}, {
         EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o4", 3] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o3", 1] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
          VertexSize -> {0.15}}], "Value" -> Rational[64, 3] Log[
          Rational[4, 3]]|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[156.8], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`AtomShape[60]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Real]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[156.8], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`AtomShape[60]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Real]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 7, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["External Legs", 
                  Style[
                  "External Legs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["External Legs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cubic Vertices", 
                  Style[
                  "Cubic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cubic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Quartic Vertices", 
                  Style[
                  "Quartic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Quartic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["List Number", 
                  Style[
                  "List Number", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["List Number"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nickel Index", 
                  Style[
                  "Nickel Index", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Nickel Index"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ee12|e23|33|e|", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Diagram", 
                  Style[
                  "Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"o1", 0, "o2", "o3", 1, "o4", 3, 2}, {
                    Null, {{1, 2}, {3, 2}, {4, 5}, {6, 7}, {2, 5}, {2, 8}, {5,
                     8}, {5, 7}, {8, 7}, {8, 7}}}, {
                    EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o4", 3] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o3", 1] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
                    VertexSize -> {0.15}}]]}, 
                    TagBox[
                    GraphicsGroupBox[
                    GraphicsComplexBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAgNNNETzAzz8AAAAAAAAAANIXeOwG
8Os/SOVpEAfF6z8AAAAAAAAAAOOa0/nfF/c/txuxwVE5AEAWtUMMe+ECQCq6
blUQLP0/rKb80fJS9T+0H91l5/sMQIQr76DpH94/D/4c0OWdBUB3O7Cj0vHo
Pwai+opOk/w/Rc3iA0if4D9KGjO3besEQGATpeNi++Y/vPn3Fou9BECGJUP4
soDmPycRlIo8jgRAHQGfYfoO5j9hpXUUnl0EQCV9vnR8puU/TUXufcwrBED4
3cMPd0flP0SNJ0bl+ANASF5MdSLy5D/kP6yQBsUDQPCpICuxpuQ/bwuQE0+Q
A0COA0vcT2XkPzfG6ajPoQBArAosaRgR4T8zR5qaXmwAQA7Shcvt2eA/fgxk
n1M2AEAuFMyIGq3gP+IbbW2d//8/uLZIK7mK4D9iWmRQ4JH/P2KyGw7ecuA/
rfAW4bAj/z/iqS1Rl2XgP3T+nVxQtf4/YQDT0Oxi4D/4PSIdAEf+P+tiJCHg
auA/FjAJBw3EBEDSpW6GOibpP9hPS+fkjARAXAjA1i0u6T+71g6ltFUEQNpe
ZVaDK+k/4SFo7ZweBEBaVneZPB7pPyHB416+5wNAA1JKfGEG6T+UQjZ2ObED
QI70xh4A5Og/4AcAey57A0CuNg3cLLfoP9uIsGy9RQNAEP5mPgKA6D+jQwoC
PlcAQC8FSMvKK+U/Lw/uhIYiAEDNXnJ8aerkP56D5Z5P3f8/dapGMvie5D+K
E1gvgXf/P8Qqz5ejSeQ/YlNJAt4T/z+Wi9QynurjP9d7DBahsv4/ngf0RSCC
4z+sqkT9A1T+PzbjT69nEOM/kGnOvD74/T9c9e3Dt5XiP4aJJ1w=
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{1, 2}, 0.06106216472119722]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{2, 3}, 0.06106216472119722]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[{2, 5}, 0.06106216472119722]}, {
                    Arrowheads[0.], 
                    ArrowBox[{2, 8}, 0.06106216472119722]}, 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{4, 5}, 0.06106216472119722]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[{5, 7}, 0.06106216472119722]}, {
                    Arrowheads[0.], 
                    ArrowBox[{5, 8}, 0.06106216472119722]}, 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{6, 7}, 0.06106216472119722]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.286798102792431, 0.498831542918055}, 8}], 
                    0.06106216472119722]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.2012639630679787`, 0.8001313622921077}, 8}], 
                    0.06106216472119722]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.06106216472119722], 
                    DiskBox[2, 0.06106216472119722], 
                    DiskBox[3, 0.06106216472119722], 
                    DiskBox[4, 0.06106216472119722], 
                    DiskBox[5, 0.06106216472119722], 
                    DiskBox[6, 0.06106216472119722], 
                    DiskBox[7, 0.06106216472119722], 
                    DiskBox[8, 0.06106216472119722]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Value"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.13722"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{470., {213.8544921875, 219.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{470., {213.8544921875, 219.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883139075856764*^9, 3.883139171278871*^9},
 CellLabel->"Out[22]=",
 CellID->1667596251,ExpressionUUID->"e0130eb0-7da2-49dc-9847-d12e7c2dc170"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->2078562862,ExpressionUUID->"3ad38541-4a30-4c0b-8778-31c5109f4c66"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "99966e69-2f93-4fba-b4ff-a061acb4a8d4"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1635126686,ExpressionUUID->"8b620c16-fc41-49dd-a09b-ff68c08387d7"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "cb19e96a-8a8d-4287-9113-ba552a7f22e7"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1505444822,ExpressionUUID->"f6f96435-24bb-492f-9a39-41df199ea03b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "e3a5f9ae-cd28-419a-86f7-f280c1966a19"],
  $Line = 0; Null]], "ExampleSection",
 CellID->524881913,ExpressionUUID->"a8724169-0fd5-48e9-a9ee-dc226020072a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"ShowIntegrand\"", "ExampleSubsection",ExpressionUUID->
   "a70b8a0a-134c-4774-b82c-396798b47ead"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1959725063,ExpressionUUID->"3711c9e3-3196-4e8c-9008-02de43e4de6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InformationDiagram", "[", 
  RowBox[{"2", ",", "0", ",", "6", ",", "16", ",", 
   RowBox[{"\"\<ShowIntegrand\>\"", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{3.883136668650971*^9},
 CellLabel->"In[5]:=",
 CellID->437168556,ExpressionUUID->"f3a4118d-933e-4dd1-a37b-1491e8fd5e5a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "External Legs" -> 2, "Cubic Vertices" -> 0, "Quartic Vertices" -> 6, 
       "List Number" -> 16, "Nickel Index" -> "ee12|333|445|5|55||", 
       "Diagram" -> 
       Graph[{"o1", 0, "o2", 1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {4, 6}, {4, 6}, {5, 
          7}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {7, 8}}}, {
         EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
          VertexSize -> {0.15}}], 
       "Integrand" -> ((((((((Rational[1, 24] GSberveglieri`Phi4tools`Propagator[
                   GSberveglieri`Phi4tools`Momentum[1]]^3) 
               GSberveglieri`Phi4tools`Propagator[
                 GSberveglieri`Phi4tools`Momentum[2]]) 
              GSberveglieri`Phi4tools`Propagator[
               GSberveglieri`Phi4tools`Momentum[1] - GSberveglieri`Phi4tools`Momentum[2] - 
                GSberveglieri`Phi4tools`Momentum[3]]) GSberveglieri`Phi4tools`Propagator[
               GSberveglieri`Phi4tools`Momentum[3]]) GSberveglieri`Phi4tools`Propagator[
              GSberveglieri`Phi4tools`Momentum[4]]) 
           GSberveglieri`Phi4tools`Propagator[-GSberveglieri`Phi4tools`Momentum[1] - 
             GSberveglieri`Phi4tools`Momentum[4] - GSberveglieri`Phi4tools`Momentum[5]]) 
          GSberveglieri`Phi4tools`Propagator[
            GSberveglieri`Phi4tools`Momentum[5]]) 
         GSberveglieri`Phi4tools`Propagator[-GSberveglieri`Phi4tools`Momentum[1] - 
           GSberveglieri`Phi4tools`Momentum[5] - GSberveglieri`Phi4tools`Momentum[6]]) 
        GSberveglieri`Phi4tools`Propagator[
          GSberveglieri`Phi4tools`Momentum[6]], "Value" -> 
       Around[-0.35237908727173759877`19.54701012632348, 1.*^-18]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Integrand"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Integrand", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], TypeSystem`AnyType, TypeSystem`AnyType}], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Integrand"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Integrand", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], TypeSystem`AnyType, TypeSystem`AnyType}], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, 
     "DataRowCount" -> 8, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["External Legs", 
                  Style[
                  "External Legs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["External Legs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cubic Vertices", 
                  Style[
                  "Cubic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cubic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Quartic Vertices", 
                  Style[
                  "Quartic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Quartic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["List Number", 
                  Style[
                  "List Number", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["List Number"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nickel Index", 
                  Style[
                  "Nickel Index", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Nickel Index"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ee12|333|445|5|55||", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Diagram", 
                  Style[
                  "Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"o1", 0, "o2", 1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {4, 6}, {4,
                     6}, {5, 7}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {7, 8}}}, {
                    EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
                    VertexSize -> {0.15}}]]}, 
                    TagBox[
                    GraphicsGroupBox[
                    GraphicsComplexBox[CompressedData["
1:eJw9kXlQU/cWx2/IvbIEkcqiohTEVwtUNgURoZxfZ6qCgBZFCqKAoCiRJ2gQ
obI8FhHZ0T6iICSyxFb6RJahoOygScoSjCEGFLWIBBCRApKEhstLZzo9M985
8z3fOeePz9kcEnnolBqGYWdU+qt3b/k0v+2oELC/K9KgNj4n7ANAltowt2Lq
n3n2poOmjywWwMf2W6fengWo8on+sitmGbSHLm9Yoi3Df7bMqosvisFslAjA
HqqhFNkkqzZ0GWqnRAlLAQRim+i6H3cuhB/bk6UzuwjEdU/hrRh9ANrcsYmX
uYug6350JWgtCb710ylDFBnwKAVXFTtJ6PJgZcbEyOBfdLclzJeEEE2NhXPT
Mmi/fEQeGknCx9va4/Ghcohl8OP0UkmI2ore+r+QQ95GiZhaQALrOmu+9bAC
/C609m+7RcKO7ML+k70KyGVWZl8rJiHellGn6Yyh9XDOd/IGCSNLHQf8L2HI
qGtfdGw+CcaKkNHkOgzlce786XyVhNqFWUHQRwwNZ58/6RRLQmikU6XAkoLc
JM8L4kJJ+MrLye7+KQriFL3s1XAn4em7uZsSFgX9fsmiZdGcBDXzzyK2DVGQ
Pb87yJdKArPCal10ziIspdw6bfJcCXJzestGTAaeInutpBol7Dk6kh0VLYOM
muSliAIliA1GKqymZDDGSHdQxijBkXbu4OoTcvBpmw5xCVFCsFqmJV8iB3Zl
c4/TYSW8Jnu8jbwVoH/N8PCyuxLKb4RnNPEVYLh6Nip7rxLs64/p1jthiF3f
uHvaVQkrtpLlVTEYEg+x5G7fKGGdVD3dqRZDpbbps+dV++KqO7j5DIYaJD96
hXyvhJJP5cv3LSgockBD8NlZJfzbx2971UkK0ho16ItOU8IWtl2DopSCTu/v
g/hyJbglx1FjJRRkTMV5BjwlWOQsaMVVk5CbN3a58hsxlC4bP2VsWAGjMp/j
YCmGUR25o3rqCgTcNStJJAeBLDRsWXi/Alf26m5JaB2EGQ8z0xULDIlEHFEw
fRAK6Vv1GccxtNaFmxigNgjark1djvkYai+yaryXLoKjZp0mNp0Y8tRbambK
nsFTn54N1olUZHtBJ21Ujwsbs7qyd1dTkatOV/4dwWPICNytDa+pKEyn7DYR
1g2ZH1dZmujgSPSkr2PseSc4XDL+os0ZRxLDxibLrR3gSSMV1DM4slduLn9Q
3gq25nUXnl3HUe98dAXR+BASMnx36jfjCDvh2MjJaoBLJbE/PfEgYacXw7ps
pxDWBLbZuJWScGUilJH51VMYZlpsls6TEM5prGPZDoB6+9RvUZ4rYGi/f2U6
ux+CBOs6HtxV8Uqzl21/0Qs1sX6JjWoYynYJ3rTWqwc+9xQsN2/H0AMXMI95
y4czKdwofqiKh2Te3oHFg9f1A3SeCRUFF+xSstdUg9WtoSdt3lTUfuS2mSbz
HpRFRMSkpan4eAg+pDRxYH9WFF3+KxWZXxG6+sWVQ1OW+rbl91TElqX3XJSw
gSconGGY4mj2d+mnZw9KgC6hln19BEdvHHhz3IUiqMxfTzhn4qg9kK8ZlngL
zsdVx+oaEChCK90sP6wFRlo5bA+cQKvvR5/tbumADVV7b45+wtGJxKt5SNQN
rRHd0pFJHNVTIi9OLHAhn/nkl2/f4Eg4ennNqHEPlN2wLtw0hKMDOZqhB7z6
Qdvh0ZtwEY7UdtAOVbYPwERcuo+NEEccv7yf5QFCiBGQNZbdqn/a7NnnmjUG
HCRhh6u8e8sd/nr/dyCdiX+3mYujXSI+urd1HFgp/3vr3YsjU5nVYuz8ONC9
za4tPsPRUGouh9YmhdaJYwdpr3CkOcjlT2ZMwPalI66ZUziaL7IZLv5uEvT1
Vs2eVeDotqV/cZXBFOy4+d3FhGIC+VByHsU2tYBBDfZl0D0CebVFhPw52wHX
OhUGrxoINC+mVXSteQyv/O1fzrUTqGHjH7Yujjz4yfznZCaPQEUHGHPpp3og
uHkoidtHIJdhKq/jZj+U0RO7kwYItGR0SJgqHQDhi+/rWlV+3IH2fFeqEALt
BnQfdhIo+nNq4KvSMdgdU5yWpLq/z+6xZkbEO6hcZy7ofaTKT2sYXXUah1/1
8hsr6gmkL3xvHUJIIcP1egKtikABWpH/ZQukYI3p9q1iEcjm/UTub8wJoE9X
d5fkE2gP6wMz/PgkiO3uTkuSCPSD5g/3NUyn4P+EwBnr
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{1, 2}, 0.06659998901841367]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{2, 3}, 0.06659998901841367]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[{2, 4}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{2, 5}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {1.8210535290881047`, 2.010361107859664}, 6}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{4, 6}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {1.8195227713553181`, 1.6679738709903325`}, 6}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {2.2968067570288206`, 0.32683901861717385`}, 7}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {2.188528671787238, 0.045813955832366075`}, 7}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{5, 8}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{6, 8}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.515359151460308, 0.4628144126838829}, 8}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.807351640802167, 0.468442214592937}, 8}], 
                    0.06659998901841367]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.06659998901841367], 
                    DiskBox[2, 0.06659998901841367], 
                    DiskBox[3, 0.06659998901841367], 
                    DiskBox[4, 0.06659998901841367], 
                    DiskBox[5, 0.06659998901841367], 
                    DiskBox[6, 0.06659998901841367], 
                    DiskBox[7, 0.06659998901841367], 
                    DiskBox[8, 0.06659998901841367]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Integrand", 
                  Style[
                  "Integrand", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Integrand"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Integrand"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   FractionBox["1", "24"], " ", 
                   SuperscriptBox[
                    RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{"q1"}], "]"}], "3"], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{"q2"}], "]"}], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{
                    RowBox[{"q1"}], "-", 
                    RowBox[{"q2"}], "-", 
                    RowBox[{"q3"}]}], "]"}], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{"q3"}], "]"}], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{"q4"}], "]"}], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"q1"}]}], "-", 
                    RowBox[{"q4"}], "-", 
                    RowBox[{"q5"}]}], "]"}], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{"q5"}], "]"}], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"q1"}]}], "-", 
                    RowBox[{"q5"}], "-", 
                    RowBox[{"q6"}]}], "]"}], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{"q6"}], "]"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Integrand"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Value"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  TemplateBox[{
                    RowBox[{"-", "0.35237908727173759877`19.54701012632348"}],
                     "1.00000000000000007154`1.550228353055094*^-18"}, 
                   "Around", SyntaxForm -> PlusMinus], 
                  Around[-0.35237908727173759877`19.54701012632348, 1.*^-18]],
                  FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{528., {239.8544921875, 245.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{528., {239.8544921875, 245.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883136669860268*^9},
 CellLabel->"Out[5]=",
 CellID->831036455,ExpressionUUID->"0cb9d7b4-816f-49d4-a610-970f0011df62"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"Substitutions\"", "ExampleSubsection",ExpressionUUID->
   "cf4f763d-b14b-4f0c-832d-eb69d438b192"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->708957001,ExpressionUUID->"d2b7e87a-3c2f-4bb7-8fef-0ec647d79cc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InformationDiagram", "[", 
  RowBox[{"2", ",", "0", ",", "6", ",", "16", ",", 
   RowBox[{"\"\<Substitutions\>\"", "->", "\"\<Sunsets\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883136703722227*^9, 3.883136725240917*^9}},
 CellLabel->"In[7]:=",
 CellID->2147435664,ExpressionUUID->"ab0e236d-e355-41a2-ac75-9b9fb102498f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "External Legs" -> 2, "Cubic Vertices" -> 0, "Quartic Vertices" -> 6, 
       "List Number" -> 16, "Nickel Index" -> "ee12|333|445|5|55||", 
       "Diagram" -> 
       Graph[{"o1", 0, "o2", 1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {4, 6}, {4, 6}, {5, 
          7}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {7, 8}}}, {
         EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
          VertexSize -> {0.15}}], "Simplified Diagram" -> 
       Graph[{"o1", 0, "o2", 1, 2, 
          Subscript["s", {1, 3}], 3, 4, 5}, {
         Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {6, 7}, {5, 8}, {5, 
          8}, {5, 9}, {7, 9}, {8, 9}, {8, 9}}}, {
         EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge[1, 
              Subscript["s", {1, 3}]] -> Dashing[{Small, Small}], 
            UndirectedEdge["o1", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge[
              Subscript["s", {1, 3}], 3] -> Dashing[{Small, Small}]}, 
          GraphLayout -> "SpringEmbedding", 
          VertexShapeFunction -> {Subscript["s", {1, 3}] -> "Star"}, 
          VertexSize -> {0.15}, 
          VertexStyle -> {Subscript["s", {1, 3}] -> RGBColor[0, 1, 0]}}], 
       "Value" -> Around[-0.35237908727173759877`19.54701012632348, 
         1.*^-18]|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Simplified Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Simplified Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Graph], TypeSystem`AnyType}], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Simplified Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Simplified Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Graph], TypeSystem`AnyType}], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     8, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["External Legs", 
                  Style[
                  "External Legs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["External Legs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cubic Vertices", 
                  Style[
                  "Cubic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cubic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Quartic Vertices", 
                  Style[
                  "Quartic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Quartic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["List Number", 
                  Style[
                  "List Number", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["List Number"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nickel Index", 
                  Style[
                  "Nickel Index", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Nickel Index"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ee12|333|445|5|55||", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Diagram", 
                  Style[
                  "Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"o1", 0, "o2", 1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {4, 6}, {4,
                     6}, {5, 7}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {7, 8}}}, {
                    EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
                    VertexSize -> {0.15}}]]}, 
                    TagBox[
                    GraphicsGroupBox[
                    GraphicsComplexBox[CompressedData["
1:eJw9kXlQU/cWx2/IvbIEkcqiohTEVwtUNgURoZxfZ6qCgBZFCqKAoCiRJ2gQ
obI8FhHZ0T6iICSyxFb6RJahoOygScoSjCEGFLWIBBCRApKEhstLZzo9M985
8z3fOeePz9kcEnnolBqGYWdU+qt3b/k0v+2oELC/K9KgNj4n7ANAltowt2Lq
n3n2poOmjywWwMf2W6fengWo8on+sitmGbSHLm9Yoi3Df7bMqosvisFslAjA
HqqhFNkkqzZ0GWqnRAlLAQRim+i6H3cuhB/bk6UzuwjEdU/hrRh9ANrcsYmX
uYug6350JWgtCb710ylDFBnwKAVXFTtJ6PJgZcbEyOBfdLclzJeEEE2NhXPT
Mmi/fEQeGknCx9va4/Ghcohl8OP0UkmI2ore+r+QQ95GiZhaQALrOmu+9bAC
/C609m+7RcKO7ML+k70KyGVWZl8rJiHellGn6Yyh9XDOd/IGCSNLHQf8L2HI
qGtfdGw+CcaKkNHkOgzlce786XyVhNqFWUHQRwwNZ58/6RRLQmikU6XAkoLc
JM8L4kJJ+MrLye7+KQriFL3s1XAn4em7uZsSFgX9fsmiZdGcBDXzzyK2DVGQ
Pb87yJdKArPCal10ziIspdw6bfJcCXJzestGTAaeInutpBol7Dk6kh0VLYOM
muSliAIliA1GKqymZDDGSHdQxijBkXbu4OoTcvBpmw5xCVFCsFqmJV8iB3Zl
c4/TYSW8Jnu8jbwVoH/N8PCyuxLKb4RnNPEVYLh6Nip7rxLs64/p1jthiF3f
uHvaVQkrtpLlVTEYEg+x5G7fKGGdVD3dqRZDpbbps+dV++KqO7j5DIYaJD96
hXyvhJJP5cv3LSgockBD8NlZJfzbx2971UkK0ho16ItOU8IWtl2DopSCTu/v
g/hyJbglx1FjJRRkTMV5BjwlWOQsaMVVk5CbN3a58hsxlC4bP2VsWAGjMp/j
YCmGUR25o3rqCgTcNStJJAeBLDRsWXi/Alf26m5JaB2EGQ8z0xULDIlEHFEw
fRAK6Vv1GccxtNaFmxigNgjark1djvkYai+yaryXLoKjZp0mNp0Y8tRbambK
nsFTn54N1olUZHtBJ21Ujwsbs7qyd1dTkatOV/4dwWPICNytDa+pKEyn7DYR
1g2ZH1dZmujgSPSkr2PseSc4XDL+os0ZRxLDxibLrR3gSSMV1DM4slduLn9Q
3gq25nUXnl3HUe98dAXR+BASMnx36jfjCDvh2MjJaoBLJbE/PfEgYacXw7ps
pxDWBLbZuJWScGUilJH51VMYZlpsls6TEM5prGPZDoB6+9RvUZ4rYGi/f2U6
ux+CBOs6HtxV8Uqzl21/0Qs1sX6JjWoYynYJ3rTWqwc+9xQsN2/H0AMXMI95
y4czKdwofqiKh2Te3oHFg9f1A3SeCRUFF+xSstdUg9WtoSdt3lTUfuS2mSbz
HpRFRMSkpan4eAg+pDRxYH9WFF3+KxWZXxG6+sWVQ1OW+rbl91TElqX3XJSw
gSconGGY4mj2d+mnZw9KgC6hln19BEdvHHhz3IUiqMxfTzhn4qg9kK8ZlngL
zsdVx+oaEChCK90sP6wFRlo5bA+cQKvvR5/tbumADVV7b45+wtGJxKt5SNQN
rRHd0pFJHNVTIi9OLHAhn/nkl2/f4Eg4ennNqHEPlN2wLtw0hKMDOZqhB7z6
Qdvh0ZtwEY7UdtAOVbYPwERcuo+NEEccv7yf5QFCiBGQNZbdqn/a7NnnmjUG
HCRhh6u8e8sd/nr/dyCdiX+3mYujXSI+urd1HFgp/3vr3YsjU5nVYuz8ONC9
za4tPsPRUGouh9YmhdaJYwdpr3CkOcjlT2ZMwPalI66ZUziaL7IZLv5uEvT1
Vs2eVeDotqV/cZXBFOy4+d3FhGIC+VByHsU2tYBBDfZl0D0CebVFhPw52wHX
OhUGrxoINC+mVXSteQyv/O1fzrUTqGHjH7Yujjz4yfznZCaPQEUHGHPpp3og
uHkoidtHIJdhKq/jZj+U0RO7kwYItGR0SJgqHQDhi+/rWlV+3IH2fFeqEALt
BnQfdhIo+nNq4KvSMdgdU5yWpLq/z+6xZkbEO6hcZy7ofaTKT2sYXXUah1/1
8hsr6gmkL3xvHUJIIcP1egKtikABWpH/ZQukYI3p9q1iEcjm/UTub8wJoE9X
d5fkE2gP6wMz/PgkiO3uTkuSCPSD5g/3NUyn4P+EwBnr
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{1, 2}, 0.06659998901841367]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{2, 3}, 0.06659998901841367]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[{2, 4}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{2, 5}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {1.8210535290881047`, 2.010361107859664}, 6}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{4, 6}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {1.8195227713553181`, 1.6679738709903325`}, 6}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {2.2968067570288206`, 0.32683901861717385`}, 7}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {2.188528671787238, 0.045813955832366075`}, 7}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{5, 8}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{6, 8}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.515359151460308, 0.4628144126838829}, 8}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.807351640802167, 0.468442214592937}, 8}], 
                    0.06659998901841367]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.06659998901841367], 
                    DiskBox[2, 0.06659998901841367], 
                    DiskBox[3, 0.06659998901841367], 
                    DiskBox[4, 0.06659998901841367], 
                    DiskBox[5, 0.06659998901841367], 
                    DiskBox[6, 0.06659998901841367], 
                    DiskBox[7, 0.06659998901841367], 
                    DiskBox[8, 0.06659998901841367]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Simplified Diagram", 
                  Style[
                  "Simplified Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Simplified Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simplified Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{"o1", 0, "o2", 1, 2, 
                    Subscript["s", {1, 3}], 3, 4, 5}, {
                    Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {6, 7}, {5,
                     8}, {5, 8}, {5, 9}, {7, 9}, {8, 9}, {8, 9}}}, {
                    EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge[1, 
                    Subscript["s", {1, 3}]] -> Dashing[{Small, Small}], 
                    UndirectedEdge["o1", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge[
                    Subscript["s", {1, 3}], 3] -> Dashing[{Small, Small}]}, 
                    GraphLayout -> "SpringEmbedding", 
                    VertexShapeFunction -> {Subscript["s", {1, 3}] -> "Star"},
                     VertexSize -> {0.15}, 
                    VertexStyle -> {
                    Subscript["s", {1, 3}] -> RGBColor[0, 1, 0]}}]]}, 
                    TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.08259266523071318, 0.6069657160342515}, {
                    0.8652367087461994, 1.2721445456692742`}}, 
                    0.06278003150037562]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.8652367087461994, 1.2721445456692742`}, {0., 
                    1.7655796018339673`}}, 0.06278003150037562]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.8652367087461994, 1.2721445456692742`}, {
                    1.320945430930943, 2.248512418201414}}, 
                    0.06278003150037562]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.8652367087461994, 1.2721445456692742`}, {
                    1.619650252087766, 0.5836662506312378}}, 
                    0.06278003150037562]}, 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{1.320945430930943, 2.248512418201414}, {
                    2.3217013557310384`, 2.4535640921376345`}}, 
                    0.06278003150037562]}, {
                    Dashing[{Small, Small}]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{{1.619650252087766, 0.5836662506312378}, {
                    2.0462052385316833`, 0.4005536094570986}, {
                    2.280803196256853, 0.}}], 0.06278003150037562]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{{1.619650252087766, 0.5836662506312378}, {
                    1.8542482098129396`, 0.18311264117413742`}, {
                    2.280803196256853, 0.}}], 0.06278003150037562]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{1.619650252087766, 0.5836662506312378}, {
                    2.6217170506551453`, 0.7644992161332185}}, 
                    0.06278003150037562]}, 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{2.3217013557310384`, 2.4535640921376345`}, {
                    3.066692011208183, 1.6812610262269378`}}, 
                    0.06278003150037562]}, {
                    Dashing[{Small, Small}]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{3.066692011208183, 1.6812610262269378`}, {
                    2.6217170506551453`, 0.7644992161332185}}, 
                    0.06278003150037562]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{{2.280803196256853, 0.}, {
                    2.325545301134145, 0.4383097370089317}, {
                    2.6217170506551453`, 0.7644992161332185}}], 
                    0.06278003150037562]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{{2.280803196256853, 0.}, {
                    2.576974945777848, 0.32618947912427226`}, {
                    2.6217170506551453`, 0.7644992161332185}}], 
                    0.06278003150037562]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    
                    DiskBox[{0.08259266523071318, 0.6069657160342515}, 
                    0.06278003150037562], 
                    
                    DiskBox[{0.8652367087461994, 1.2721445456692742`}, 
                    0.06278003150037562], 
                    DiskBox[{0., 1.7655796018339673`}, 0.06278003150037562], 
                    
                    DiskBox[{1.320945430930943, 2.248512418201414}, 
                    0.06278003150037562], 
                    
                    DiskBox[{1.619650252087766, 0.5836662506312378}, 
                    0.06278003150037562], 
                    StyleBox[
                    
                    PolygonBox[{{2.3217013557310384`, 2.5274229157968815`}, {
                    2.303442411369469, 2.472191178603922}, {
                    2.2478425320717914`, 2.470999801946139}, {
                    2.2921578262673394`, 2.4356733526608147`}, {
                    2.276054057607147, 2.3797052684783875`}, {
                    2.3217013557310384`, 2.413104056896493}, {
                    2.36734865385493, 2.3797052684783875`}, {
                    2.3512448851947374`, 2.4356733526608147`}, {
                    2.3955601793902854`, 2.470999801946139}, {
                    2.3399603000926077`, 2.472191178603922}, {
                    2.3217013557310384`, 2.5274229157968815`}}], {
                    RGBColor[0, 1, 0]}, StripOnInput -> False], 
                    
                    DiskBox[{3.066692011208183, 1.6812610262269378`}, 
                    0.06278003150037562], 
                    DiskBox[{2.280803196256853, 0.}, 0.06278003150037562], 
                    
                    DiskBox[{2.6217170506551453`, 0.7644992161332185}, 
                    0.06278003150037562]}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simplified Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Value"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  TemplateBox[{
                    RowBox[{"-", "0.35237908727173759877`19.54701012632348"}],
                     "1.00000000000000007154`1.550228353055094*^-18"}, 
                   "Around", SyntaxForm -> PlusMinus], 
                  Around[-0.35237908727173759877`19.54701012632348, 1.*^-18]],
                  FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{491., {375.8544921875, 381.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{491., {375.8544921875, 381.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8831367173441153`*^9, 3.883136725849161*^9}},
 CellLabel->"Out[7]=",
 CellID->1685626089,ExpressionUUID->"f6618269-d052-42ad-a683-8d3a7e0d7401"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"Tensor\"", "ExampleSubsection",ExpressionUUID->
   "c0985408-15f0-4af8-9c54-94377abe7ad8"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1024248470,ExpressionUUID->"33e620f1-07ef-40a8-a3c9-4782343243d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InformationDiagram", "[", 
  RowBox[{"2", ",", "0", ",", "6", ",", "16", ",", 
   RowBox[{"\"\<Tensor\>\"", "->", "\"\<Cubic\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883136745725214*^9, 3.883136751771229*^9}},
 CellLabel->"In[8]:=",
 CellID->2111846992,ExpressionUUID->"3d7a9a48-8c12-487f-a1b1-a9cd7fe274f7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "External Legs" -> 2, "Cubic Vertices" -> 0, "Quartic Vertices" -> 6, 
       "List Number" -> 16, "Nickel Index" -> "ee12|333|445|5|55||", 
       "Symmetry Factor" -> 
       Rational[64, 243] + Rational[104, 243] GSberveglieri`Phi4tools`NComponents[] + 
        Rational[20, 81] GSberveglieri`Phi4tools`NComponents[]^2 + 
        Rational[14, 243] GSberveglieri`Phi4tools`NComponents[]^3 + 
        Rational[1, 243] GSberveglieri`Phi4tools`NComponents[]^4 + 
        Rational[64, 27] 
         GSberveglieri`Phi4tools`XCubicRatio[] + (Rational[8, 3] 
          GSberveglieri`Phi4tools`NComponents[]) 
         GSberveglieri`Phi4tools`XCubicRatio[] + (Rational[8, 9] 
          GSberveglieri`Phi4tools`NComponents[]^2) 
         GSberveglieri`Phi4tools`XCubicRatio[] + (Rational[2, 27] 
          GSberveglieri`Phi4tools`NComponents[]^3) GSberveglieri`Phi4tools`XCubicRatio[] + 
        Rational[668, 81] 
         GSberveglieri`Phi4tools`XCubicRatio[]^2 + (Rational[158, 27] 
          GSberveglieri`Phi4tools`NComponents[]) 
         GSberveglieri`Phi4tools`XCubicRatio[]^2 + (Rational[8, 9] 
          GSberveglieri`Phi4tools`NComponents[]^2) 
         GSberveglieri`Phi4tools`XCubicRatio[]^2 + (Rational[1, 81] 
          GSberveglieri`Phi4tools`NComponents[]^3) GSberveglieri`Phi4tools`XCubicRatio[]^2 + 
        Rational[382, 27] 
         GSberveglieri`Phi4tools`XCubicRatio[]^3 + (Rational[151, 27] 
          GSberveglieri`Phi4tools`NComponents[]) 
         GSberveglieri`Phi4tools`XCubicRatio[]^3 + (Rational[7, 27] 
          GSberveglieri`Phi4tools`NComponents[]^2) GSberveglieri`Phi4tools`XCubicRatio[]^3 + 
        Rational[38, 3] 
         GSberveglieri`Phi4tools`XCubicRatio[]^4 + (Rational[7, 3] 
          GSberveglieri`Phi4tools`NComponents[]) GSberveglieri`Phi4tools`XCubicRatio[]^4 + 
        Rational[17, 3] 
         GSberveglieri`Phi4tools`XCubicRatio[]^5 + (Rational[1, 3] 
          GSberveglieri`Phi4tools`NComponents[]) GSberveglieri`Phi4tools`XCubicRatio[]^5 + 
        GSberveglieri`Phi4tools`XCubicRatio[]^6, "Diagram" -> 
       Graph[{"o1", 0, "o2", 1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {4, 6}, {4, 6}, {5, 
          7}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {7, 8}}}, {
         EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
          VertexSize -> {0.15}}], "Value" -> 
       Around[-0.35237908727173759877`19.54701012632348, 1.*^-18]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Symmetry Factor"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Symmetry Factor", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], TypeSystem`AnyType, 
        TypeSystem`Atom[Graph], TypeSystem`AnyType}], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Symmetry Factor"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Symmetry Factor", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], TypeSystem`AnyType, 
        TypeSystem`Atom[Graph], TypeSystem`AnyType}], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     8, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["External Legs", 
                  Style[
                  "External Legs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["External Legs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cubic Vertices", 
                  Style[
                  "Cubic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cubic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Quartic Vertices", 
                  Style[
                  "Quartic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Quartic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["List Number", 
                  Style[
                  "List Number", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["List Number"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nickel Index", 
                  Style[
                  "Nickel Index", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Nickel Index"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ee12|333|445|5|55||", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symmetry Factor", 
                  Style[
                  "Symmetry Factor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Symmetry Factor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Symmetry Factor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   FractionBox["64", "243"], "+", 
                   FractionBox[
                    RowBox[{"104", " ", 
                    RowBox[{"\[CapitalNu]"}]}], "243"], "+", 
                   FractionBox[
                    RowBox[{"20", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "2"]}], "81"], "+", 
                   FractionBox[
                    RowBox[{"14", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "3"]}], "243"], "+", 
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "4"], "243"], "+", 
                   FractionBox[
                    RowBox[{"64", " ", 
                    RowBox[{"\[CapitalChi]"}]}], "27"], "+", 
                   FractionBox[
                    RowBox[{"8", " ", 
                    RowBox[{"\[CapitalNu]"}], " ", 
                    RowBox[{"\[CapitalChi]"}]}], "3"], "+", 
                   FractionBox[
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "2"], " ", 
                    RowBox[{"\[CapitalChi]"}]}], "9"], "+", 
                   FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "3"], " ", 
                    RowBox[{"\[CapitalChi]"}]}], "27"], "+", 
                   FractionBox[
                    RowBox[{"668", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "2"]}], "81"], "+", 
                   FractionBox[
                    RowBox[{"158", " ", 
                    RowBox[{"\[CapitalNu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "2"]}], "27"], "+", 
                   FractionBox[
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "2"]}], "9"], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "2"]}], "81"], "+", 
                   FractionBox[
                    RowBox[{"382", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "3"]}], "27"], "+", 
                   FractionBox[
                    RowBox[{"151", " ", 
                    RowBox[{"\[CapitalNu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "3"]}], "27"], "+", 
                   FractionBox[
                    RowBox[{"7", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "3"]}], "27"], "+", 
                   FractionBox[
                    RowBox[{"38", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "4"]}], "3"], "+", 
                   FractionBox[
                    RowBox[{"7", " ", 
                    RowBox[{"\[CapitalNu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "4"]}], "3"], "+", 
                   FractionBox[
                    RowBox[{"17", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "5"]}], "3"], "+", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"\[CapitalNu]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "5"]}], "3"], "+", 
                   SuperscriptBox[
                    RowBox[{"\[CapitalChi]"}], "6"]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Symmetry Factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Diagram", 
                  Style[
                  "Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"o1", 0, "o2", 1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {4, 6}, {4,
                     6}, {5, 7}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {7, 8}}}, {
                    EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
                    VertexSize -> {0.15}}]]}, 
                    TagBox[
                    GraphicsGroupBox[
                    GraphicsComplexBox[CompressedData["
1:eJw9kXlQU/cWx2/IvbIEkcqiohTEVwtUNgURoZxfZ6qCgBZFCqKAoCiRJ2gQ
obI8FhHZ0T6iICSyxFb6RJahoOygScoSjCEGFLWIBBCRApKEhstLZzo9M985
8z3fOeePz9kcEnnolBqGYWdU+qt3b/k0v+2oELC/K9KgNj4n7ANAltowt2Lq
n3n2poOmjywWwMf2W6fengWo8on+sitmGbSHLm9Yoi3Df7bMqosvisFslAjA
HqqhFNkkqzZ0GWqnRAlLAQRim+i6H3cuhB/bk6UzuwjEdU/hrRh9ANrcsYmX
uYug6350JWgtCb710ylDFBnwKAVXFTtJ6PJgZcbEyOBfdLclzJeEEE2NhXPT
Mmi/fEQeGknCx9va4/Ghcohl8OP0UkmI2ore+r+QQ95GiZhaQALrOmu+9bAC
/C609m+7RcKO7ML+k70KyGVWZl8rJiHellGn6Yyh9XDOd/IGCSNLHQf8L2HI
qGtfdGw+CcaKkNHkOgzlce786XyVhNqFWUHQRwwNZ58/6RRLQmikU6XAkoLc
JM8L4kJJ+MrLye7+KQriFL3s1XAn4em7uZsSFgX9fsmiZdGcBDXzzyK2DVGQ
Pb87yJdKArPCal10ziIspdw6bfJcCXJzestGTAaeInutpBol7Dk6kh0VLYOM
muSliAIliA1GKqymZDDGSHdQxijBkXbu4OoTcvBpmw5xCVFCsFqmJV8iB3Zl
c4/TYSW8Jnu8jbwVoH/N8PCyuxLKb4RnNPEVYLh6Nip7rxLs64/p1jthiF3f
uHvaVQkrtpLlVTEYEg+x5G7fKGGdVD3dqRZDpbbps+dV++KqO7j5DIYaJD96
hXyvhJJP5cv3LSgockBD8NlZJfzbx2971UkK0ho16ItOU8IWtl2DopSCTu/v
g/hyJbglx1FjJRRkTMV5BjwlWOQsaMVVk5CbN3a58hsxlC4bP2VsWAGjMp/j
YCmGUR25o3rqCgTcNStJJAeBLDRsWXi/Alf26m5JaB2EGQ8z0xULDIlEHFEw
fRAK6Vv1GccxtNaFmxigNgjark1djvkYai+yaryXLoKjZp0mNp0Y8tRbambK
nsFTn54N1olUZHtBJ21Ujwsbs7qyd1dTkatOV/4dwWPICNytDa+pKEyn7DYR
1g2ZH1dZmujgSPSkr2PseSc4XDL+os0ZRxLDxibLrR3gSSMV1DM4slduLn9Q
3gq25nUXnl3HUe98dAXR+BASMnx36jfjCDvh2MjJaoBLJbE/PfEgYacXw7ps
pxDWBLbZuJWScGUilJH51VMYZlpsls6TEM5prGPZDoB6+9RvUZ4rYGi/f2U6
ux+CBOs6HtxV8Uqzl21/0Qs1sX6JjWoYynYJ3rTWqwc+9xQsN2/H0AMXMI95
y4czKdwofqiKh2Te3oHFg9f1A3SeCRUFF+xSstdUg9WtoSdt3lTUfuS2mSbz
HpRFRMSkpan4eAg+pDRxYH9WFF3+KxWZXxG6+sWVQ1OW+rbl91TElqX3XJSw
gSconGGY4mj2d+mnZw9KgC6hln19BEdvHHhz3IUiqMxfTzhn4qg9kK8ZlngL
zsdVx+oaEChCK90sP6wFRlo5bA+cQKvvR5/tbumADVV7b45+wtGJxKt5SNQN
rRHd0pFJHNVTIi9OLHAhn/nkl2/f4Eg4ennNqHEPlN2wLtw0hKMDOZqhB7z6
Qdvh0ZtwEY7UdtAOVbYPwERcuo+NEEccv7yf5QFCiBGQNZbdqn/a7NnnmjUG
HCRhh6u8e8sd/nr/dyCdiX+3mYujXSI+urd1HFgp/3vr3YsjU5nVYuz8ONC9
za4tPsPRUGouh9YmhdaJYwdpr3CkOcjlT2ZMwPalI66ZUziaL7IZLv5uEvT1
Vs2eVeDotqV/cZXBFOy4+d3FhGIC+VByHsU2tYBBDfZl0D0CebVFhPw52wHX
OhUGrxoINC+mVXSteQyv/O1fzrUTqGHjH7Yujjz4yfznZCaPQEUHGHPpp3og
uHkoidtHIJdhKq/jZj+U0RO7kwYItGR0SJgqHQDhi+/rWlV+3IH2fFeqEALt
BnQfdhIo+nNq4KvSMdgdU5yWpLq/z+6xZkbEO6hcZy7ofaTKT2sYXXUah1/1
8hsr6gmkL3xvHUJIIcP1egKtikABWpH/ZQukYI3p9q1iEcjm/UTub8wJoE9X
d5fkE2gP6wMz/PgkiO3uTkuSCPSD5g/3NUyn4P+EwBnr
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{1, 2}, 0.06659998901841367]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{2, 3}, 0.06659998901841367]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[{2, 4}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{2, 5}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {1.8210535290881047`, 2.010361107859664}, 6}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{4, 6}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {1.8195227713553181`, 1.6679738709903325`}, 6}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {2.2968067570288206`, 0.32683901861717385`}, 7}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {2.188528671787238, 0.045813955832366075`}, 7}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{5, 8}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{6, 8}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.515359151460308, 0.4628144126838829}, 8}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.807351640802167, 0.468442214592937}, 8}], 
                    0.06659998901841367]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.06659998901841367], 
                    DiskBox[2, 0.06659998901841367], 
                    DiskBox[3, 0.06659998901841367], 
                    DiskBox[4, 0.06659998901841367], 
                    DiskBox[5, 0.06659998901841367], 
                    DiskBox[6, 0.06659998901841367], 
                    DiskBox[7, 0.06659998901841367], 
                    DiskBox[8, 0.06659998901841367]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Value"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  TemplateBox[{
                    RowBox[{"-", "0.35237908727173759877`19.54701012632348"}],
                     "1.00000000000000007154`1.550228353055094*^-18"}, 
                   "Around", SyntaxForm -> PlusMinus], 
                  Around[-0.35237908727173759877`19.54701012632348, 1.*^-18]],
                  FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{528., {241.3544921875, 246.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{528., {241.3544921875, 246.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883136752248013*^9},
 CellLabel->"Out[8]=",
 CellID->1707594812,ExpressionUUID->"5789e530-4bf5-49f9-bb68-a1e51155dc84"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "9f7ce94d-f6fe-43a0-9778-352e0e2fe121"],
  $Line = 0; Null]], "ExampleSection",
 CellID->14234766,ExpressionUUID->"137db795-c8bd-42de-8de9-34c50d526ec6"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "2638e69d-e28f-4c6f-8d46-fec5e1fd2d58"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1975895366,ExpressionUUID->"1a1530ea-4595-425a-bf4d-0008b5eb8daa"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "e99a9870-0db2-4654-bcba-1ca8cddb58cd"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1731221428,ExpressionUUID->"c3e0fa73-40ec-460d-80af-406ff165f2dc"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "7592f176-3188-4189-a5ee-8d33138b9018"],
  $Line = 0; Null]], "ExampleSection",
 CellID->790309891,ExpressionUUID->"6765bbc2-825e-48fe-a984-738293cabbcb"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "7bd0b298-d8bb-4c34-829b-275169586869"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1789517678,ExpressionUUID->"ab68aad3-cecf-4ac3-871f-f6250836a3b3"],

Cell["Get complete information about a diagram in the O(N) theory", \
"ExampleText",
 CellChangeTimes->{{3.869889884209017*^9, 3.869889958413463*^9}, {
   3.883136683849285*^9, 3.883136693789112*^9}, 3.8831398493533916`*^9},
 CellID->738952901,ExpressionUUID->"7c9d99af-603a-4075-b004-5565bfc0cad5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InformationDiagram", "[", 
  RowBox[{"2", ",", "0", ",", "6", ",", "16", ",", 
   RowBox[{"\"\<Tensor\>\"", "->", "\"\<O(N)\>\""}], ",", 
   RowBox[{"\"\<Substitutions\>\"", "->", "\"\<Analytics\>\""}], ",", 
   RowBox[{"\"\<ShowIntegrand\>\"", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869889965108235*^9, 3.869890040728969*^9}, {
  3.869890294989358*^9, 3.869890295087693*^9}},
 CellLabel->"In[103]:=",
 CellID->1274420237,ExpressionUUID->"2c015833-44fb-4e18-b637-c061dc1b2c0d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "External Legs" -> 2, "Cubic Vertices" -> 0, "Quartic Vertices" -> 6, 
       "List Number" -> 16, "Nickel Index" -> "ee12|333|445|5|55||", 
       "Symmetry Factor" -> 
       Rational[64, 243] + Rational[104, 243] GSberveglieri`Phi4tools`NComponents[] + 
        Rational[20, 81] GSberveglieri`Phi4tools`NComponents[]^2 + 
        Rational[14, 243] GSberveglieri`Phi4tools`NComponents[]^3 + 
        Rational[1, 243] GSberveglieri`Phi4tools`NComponents[]^4, "Diagram" -> 
       Graph[{"o1", 0, "o2", 1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {4, 6}, {4, 6}, {5, 
          7}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {7, 8}}}, {
         EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
          VertexSize -> {0.15}}], "Simplified Diagram" -> 
       Graph[{0, "o1", "o2", 1, 2, 5, 3, 
          Subscript["s", {1, 3}], 4, 
          Subscript["b", {4, 5}], 
          Subscript["b", {2, 4}]}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {5, 6}, {7, 6}, {4, 8}, {8, 
          7}, {9, 10}, {10, 6}, {5, 11}, {11, 9}}}, {
         EdgeStyle -> {UndirectedEdge[1, 
              Subscript["s", {1, 3}]] -> Dashing[{Small, Small}], 
            UndirectedEdge[
              Subscript["b", {4, 5}], 5] -> Dashing[{Small, Small}], 
            UndirectedEdge[4, 
              Subscript["b", {4, 5}]] -> Dashing[{Small, Small}], 
            UndirectedEdge[2, 
              Subscript["b", {2, 4}]] -> Dashing[{Small, Small}], 
            UndirectedEdge[0, "o2"] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge[0, "o1"] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge[
              Subscript["s", {1, 3}], 3] -> Dashing[{Small, Small}], 
            UndirectedEdge[
              Subscript["b", {2, 4}], 4] -> Dashing[{Small, Small}]}, 
          VertexShapeFunction -> {
           Subscript["s", {1, 3}] -> "Star", Subscript["b", {4, 5}] -> 
            "Capsule", Subscript["b", {2, 4}] -> "Capsule"}, 
          VertexSize -> {0.15}, 
          VertexStyle -> {
           Subscript["b", {4, 5}] -> RGBColor[0, 1, 0], 
            Subscript["b", {2, 4}] -> RGBColor[0, 1, 0], 
            Subscript["s", {1, 3}] -> RGBColor[0, 1, 0]}}], "Integrand" -> 
       Rational[1, 24] GSberveglieri`Phi4tools`BubbleSubdiagram[
           GSberveglieri`Phi4tools`Momentum[2]]^2 GSberveglieri`Phi4tools`Propagator[
           GSberveglieri`Phi4tools`Momentum[1]]^3 
        GSberveglieri`Phi4tools`Propagator[
         GSberveglieri`Phi4tools`Momentum[1] + GSberveglieri`Phi4tools`Momentum[2]] 
        GSberveglieri`Phi4tools`SunsetSubdiagram[
          GSberveglieri`Phi4tools`Momentum[1]], "Value" -> 
       Around[-0.35237908727173759877`19.54701012632348, 1.*^-18]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Symmetry Factor"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Simplified Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Integrand"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Symmetry Factor", "Diagram", "Simplified Diagram", 
        "Integrand", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], TypeSystem`AnyType, 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Graph], TypeSystem`AnyType, TypeSystem`AnyType}], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[212.8], {"Symmetry Factor"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Simplified Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Integrand"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Value"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Symmetry Factor", "Diagram", "Simplified Diagram", 
        "Integrand", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], TypeSystem`AnyType, 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Graph], TypeSystem`AnyType, TypeSystem`AnyType}], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, 
     "DataRowCount" -> 10, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["External Legs", 
                  Style[
                  "External Legs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["External Legs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["External Legs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cubic Vertices", 
                  Style[
                  "Cubic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cubic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cubic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Quartic Vertices", 
                  Style[
                  "Quartic Vertices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Quartic Vertices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quartic Vertices"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["List Number", 
                  Style[
                  "List Number", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["List Number"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["List Number"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Nickel Index", 
                  Style[
                  "Nickel Index", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Nickel Index"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ee12|333|445|5|55||", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Nickel Index"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symmetry Factor", 
                  Style[
                  "Symmetry Factor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Symmetry Factor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Symmetry Factor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   FractionBox["64", "243"], "+", 
                   FractionBox[
                    RowBox[{"104", " ", 
                    RowBox[{"\[CapitalNu]"}]}], "243"], "+", 
                   FractionBox[
                    RowBox[{"20", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "2"]}], "81"], "+", 
                   FractionBox[
                    RowBox[{"14", " ", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "3"]}], "243"], "+", 
                   FractionBox[
                    SuperscriptBox[
                    RowBox[{"\[CapitalNu]"}], "4"], "243"]}], FontFamily -> 
                 Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Symmetry Factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Diagram", 
                  Style[
                  "Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"o1", 0, "o2", 1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {3, 2}, {2, 4}, {2, 5}, {4, 6}, {4, 6}, {4,
                     6}, {5, 7}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {7, 8}}}, {
                    EdgeStyle -> {UndirectedEdge["o2", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge["o1", 0] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
                    VertexSize -> {0.15}}]]}, 
                    TagBox[
                    GraphicsGroupBox[
                    GraphicsComplexBox[CompressedData["
1:eJw9kXlQU/cWx2/IvbIEkcqiohTEVwtUNgURoZxfZ6qCgBZFCqKAoCiRJ2gQ
obI8FhHZ0T6iICSyxFb6RJahoOygScoSjCEGFLWIBBCRApKEhstLZzo9M985
8z3fOeePz9kcEnnolBqGYWdU+qt3b/k0v+2oELC/K9KgNj4n7ANAltowt2Lq
n3n2poOmjywWwMf2W6fengWo8on+sitmGbSHLm9Yoi3Df7bMqosvisFslAjA
HqqhFNkkqzZ0GWqnRAlLAQRim+i6H3cuhB/bk6UzuwjEdU/hrRh9ANrcsYmX
uYug6350JWgtCb710ylDFBnwKAVXFTtJ6PJgZcbEyOBfdLclzJeEEE2NhXPT
Mmi/fEQeGknCx9va4/Ghcohl8OP0UkmI2ore+r+QQ95GiZhaQALrOmu+9bAC
/C609m+7RcKO7ML+k70KyGVWZl8rJiHellGn6Yyh9XDOd/IGCSNLHQf8L2HI
qGtfdGw+CcaKkNHkOgzlce786XyVhNqFWUHQRwwNZ58/6RRLQmikU6XAkoLc
JM8L4kJJ+MrLye7+KQriFL3s1XAn4em7uZsSFgX9fsmiZdGcBDXzzyK2DVGQ
Pb87yJdKArPCal10ziIspdw6bfJcCXJzestGTAaeInutpBol7Dk6kh0VLYOM
muSliAIliA1GKqymZDDGSHdQxijBkXbu4OoTcvBpmw5xCVFCsFqmJV8iB3Zl
c4/TYSW8Jnu8jbwVoH/N8PCyuxLKb4RnNPEVYLh6Nip7rxLs64/p1jthiF3f
uHvaVQkrtpLlVTEYEg+x5G7fKGGdVD3dqRZDpbbps+dV++KqO7j5DIYaJD96
hXyvhJJP5cv3LSgockBD8NlZJfzbx2971UkK0ho16ItOU8IWtl2DopSCTu/v
g/hyJbglx1FjJRRkTMV5BjwlWOQsaMVVk5CbN3a58hsxlC4bP2VsWAGjMp/j
YCmGUR25o3rqCgTcNStJJAeBLDRsWXi/Alf26m5JaB2EGQ8z0xULDIlEHFEw
fRAK6Vv1GccxtNaFmxigNgjark1djvkYai+yaryXLoKjZp0mNp0Y8tRbambK
nsFTn54N1olUZHtBJ21Ujwsbs7qyd1dTkatOV/4dwWPICNytDa+pKEyn7DYR
1g2ZH1dZmujgSPSkr2PseSc4XDL+os0ZRxLDxibLrR3gSSMV1DM4slduLn9Q
3gq25nUXnl3HUe98dAXR+BASMnx36jfjCDvh2MjJaoBLJbE/PfEgYacXw7ps
pxDWBLbZuJWScGUilJH51VMYZlpsls6TEM5prGPZDoB6+9RvUZ4rYGi/f2U6
ux+CBOs6HtxV8Uqzl21/0Qs1sX6JjWoYynYJ3rTWqwc+9xQsN2/H0AMXMI95
y4czKdwofqiKh2Te3oHFg9f1A3SeCRUFF+xSstdUg9WtoSdt3lTUfuS2mSbz
HpRFRMSkpan4eAg+pDRxYH9WFF3+KxWZXxG6+sWVQ1OW+rbl91TElqX3XJSw
gSconGGY4mj2d+mnZw9KgC6hln19BEdvHHhz3IUiqMxfTzhn4qg9kK8ZlngL
zsdVx+oaEChCK90sP6wFRlo5bA+cQKvvR5/tbumADVV7b45+wtGJxKt5SNQN
rRHd0pFJHNVTIi9OLHAhn/nkl2/f4Eg4ennNqHEPlN2wLtw0hKMDOZqhB7z6
Qdvh0ZtwEY7UdtAOVbYPwERcuo+NEEccv7yf5QFCiBGQNZbdqn/a7NnnmjUG
HCRhh6u8e8sd/nr/dyCdiX+3mYujXSI+urd1HFgp/3vr3YsjU5nVYuz8ONC9
za4tPsPRUGouh9YmhdaJYwdpr3CkOcjlT2ZMwPalI66ZUziaL7IZLv5uEvT1
Vs2eVeDotqV/cZXBFOy4+d3FhGIC+VByHsU2tYBBDfZl0D0CebVFhPw52wHX
OhUGrxoINC+mVXSteQyv/O1fzrUTqGHjH7Yujjz4yfznZCaPQEUHGHPpp3og
uHkoidtHIJdhKq/jZj+U0RO7kwYItGR0SJgqHQDhi+/rWlV+3IH2fFeqEALt
BnQfdhIo+nNq4KvSMdgdU5yWpLq/z+6xZkbEO6hcZy7ofaTKT2sYXXUah1/1
8hsr6gmkL3xvHUJIIcP1egKtikABWpH/ZQukYI3p9q1iEcjm/UTub8wJoE9X
d5fkE2gP6wMz/PgkiO3uTkuSCPSD5g/3NUyn4P+EwBnr
                    "], {{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{1, 2}, 0.06659998901841367]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{2, 3}, 0.06659998901841367]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    ArrowBox[{2, 4}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{2, 5}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {1.8210535290881047`, 2.010361107859664}, 6}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{4, 6}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    4, {1.8195227713553181`, 1.6679738709903325`}, 6}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {2.2968067570288206`, 0.32683901861717385`}, 7}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    5, {2.188528671787238, 0.045813955832366075`}, 7}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{5, 8}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[{6, 8}, 0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.515359151460308, 0.4628144126838829}, 8}], 
                    0.06659998901841367]}, {
                    Arrowheads[0.], 
                    ArrowBox[
                    
                    BezierCurveBox[{
                    7, {2.807351640802167, 0.468442214592937}, 8}], 
                    0.06659998901841367]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.06659998901841367], 
                    DiskBox[2, 0.06659998901841367], 
                    DiskBox[3, 0.06659998901841367], 
                    DiskBox[4, 0.06659998901841367], 
                    DiskBox[5, 0.06659998901841367], 
                    DiskBox[6, 0.06659998901841367], 
                    DiskBox[7, 0.06659998901841367], 
                    DiskBox[8, 0.06659998901841367]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Simplified Diagram", 
                  Style[
                  "Simplified Diagram", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Simplified Diagram"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simplified Diagram"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{0, "o1", "o2", 1, 2, 5, 3, 
                    Subscript["s", {1, 3}], 4, 
                    Subscript["b", {4, 5}], 
                    Subscript["b", {2, 4}]}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {5, 6}, {7, 6}, {4,
                     8}, {8, 7}, {9, 10}, {10, 6}, {5, 11}, {11, 9}}}, {
                    EdgeStyle -> {UndirectedEdge[1, 
                    Subscript["s", {1, 3}]] -> Dashing[{Small, Small}], 
                    UndirectedEdge[
                    Subscript["b", {4, 5}], 5] -> Dashing[{Small, Small}], 
                    UndirectedEdge[4, 
                    Subscript["b", {4, 5}]] -> Dashing[{Small, Small}], 
                    UndirectedEdge[2, 
                    Subscript["b", {2, 4}]] -> Dashing[{Small, Small}], 
                    UndirectedEdge[0, "o2"] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge[0, "o1"] -> Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]], UndirectedEdge[
                    Subscript["s", {1, 3}], 3] -> Dashing[{Small, Small}], 
                    UndirectedEdge[
                    Subscript["b", {2, 4}], 4] -> Dashing[{Small, Small}]}, 
                    VertexShapeFunction -> {
                    Subscript["s", {1, 3}] -> "Star", Subscript["b", {4, 5}] -> 
                    "Capsule", Subscript["b", {2, 4}] -> "Capsule"}, 
                    VertexSize -> {0.15}, 
                    VertexStyle -> {
                    Subscript["b", {4, 5}] -> RGBColor[0, 1, 0], 
                    Subscript["b", {2, 4}] -> RGBColor[0, 1, 0], 
                    Subscript["s", {1, 3}] -> RGBColor[0, 1, 0]}}]]}, 
                    TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9644664411005806, 0.8210945796225442}, {
                    0.4854825863301244, 0.}}, 0.060439397683755294`]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9644664411005806, 0.8210945796225442}, {0., 
                    0.7645730682627703}}, 0.060439397683755294`]}, {
                    Directive[
                    Dashing[{0, Small}], 
                    Thickness[Large]]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9644664411005806, 0.8210945796225442}, {
                    0.9311626238499129, 1.8566009426233767`}}, 
                    0.060439397683755294`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9644664411005806, 0.8210945796225442}, {
                    2.26051862759782, 0.7966049139222628}}, 
                    0.060439397683755294`]}, 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9311626238499129, 1.8566009426233767`}, {
                    1.5027319651215563`, 2.5919419240158477`}}, 
                    0.060439397683755294`]}, {
                    Dashing[{Small, Small}]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{2.26051862759782, 0.7966049139222628}, {
                    2.956780879677491, 1.600206270801053}}, 
                    0.060439397683755294`]}, 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{2.26051862759782, 0.7966049139222628}, {
                    3.1969672630228008`, 0.2911756921167855}}, 
                    0.060439397683755294`]}, {
                    Dashing[{Small, Small}]}, StripOnInput -> False], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{2.956780879677491, 1.600206270801053}, {
                    2.403129626045275, 2.452623843471907}}, 
                    0.060439397683755294`]}, 
                    StyleBox[{
                    Arrowheads[0.], 
                    ArrowBox[{{2.956780879677491, 1.600206270801053}, {
                    3.8972370854424097`, 1.2566402798740688`}}, 
                    0.060439397683755294`]}, {
                    Dashing[{Small, Small}]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{2.403129626045275, 2.452623843471907}, {
                    1.5027319651215563`, 2.5919419240158477`}}, 
                    0.060439397683755294`]}, {
                    Dashing[{Small, Small}]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{4.053203749060425, 0.46601866322894203`}, {
                    3.8972370854424097`, 1.2566402798740688`}}, 
                    0.060439397683755294`]}, {
                    Dashing[{Small, Small}]}, StripOnInput -> False], 
                    StyleBox[{
                    Arrowheads[0.], 
                    
                    ArrowBox[{{4.053203749060425, 0.46601866322894203`}, {
                    3.1969672630228008`, 0.2911756921167855}}, 
                    0.060439397683755294`]}, {
                    Dashing[{Small, Small}]}, StripOnInput -> False]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    
                    DiskBox[{0.9644664411005806, 0.8210945796225442}, 
                    0.060439397683755294`], 
                    DiskBox[{0.4854825863301244, 0.}, 0.060439397683755294`], 
                    
                    DiskBox[{0., 0.7645730682627703}, 0.060439397683755294`], 
                    
                    
                    DiskBox[{0.9311626238499129, 1.8566009426233767`}, 
                    0.060439397683755294`], 
                    
                    DiskBox[{2.26051862759782, 0.7966049139222628}, 
                    0.060439397683755294`], 
                    
                    DiskBox[{2.956780879677491, 1.600206270801053}, 
                    0.060439397683755294`], 
                    
                    DiskBox[{2.403129626045275, 2.452623843471907}, 
                    0.060439397683755294`], 
                    StyleBox[
                    
                    PolygonBox[{{1.5027319651215563`, 2.663047062208855}, {
                    1.4851537706992128`, 2.6098745350662087`}, {
                    1.4316268269285486`, 2.608727576616364}, {
                    1.4742899098443532`, 2.5747182066609193`}, {
                    1.4587865395050954`, 2.52083678582284}, {
                    1.5027319651215563`, 2.552990364072405}, {
                    1.5466773907380171`, 2.52083678582284}, {
                    1.5311740203987594`, 2.5747182066609193`}, {
                    1.573837103314564, 2.608727576616364}, {
                    1.5203101595438997`, 2.6098745350662087`}, {
                    1.5027319651215563`, 2.663047062208855}}], {
                    RGBColor[0, 1, 0]}, StripOnInput -> False], 
                    
                    DiskBox[{4.053203749060425, 0.46601866322894203`}, 
                    0.060439397683755294`], 
                    StyleBox[
                    
                    FilledCurveBox[{{{0, 2, 1}, {1, 6, 3}, {0, 1, 1}, {1, 6, 
                    3}}}, {{{3.861684516345906, 1.221087710777565}, {
                    3.9327896545389134`, 1.221087710777565}, {
                    3.9524248434220257`, 1.221087710777565}, {
                    3.968342223635417, 1.2370051514303542`}, {
                    3.968342223635417, 1.2566402798740688`}, {
                    3.968342223635417, 1.2762754083177834`}, {
                    3.9524248434220257`, 1.2921928489705725`}, {
                    3.9327896545389134`, 1.2921928489705725`}, {
                    3.861684516345906, 1.2921928489705725`}, {
                    3.8420493274627936`, 1.2921928489705725`}, {
                    3.826131947249402, 1.2762754083177834`}, {
                    3.826131947249402, 1.2566402798740688`}, {
                    3.826131947249402, 1.2370051514303542`}, {
                    3.8420493274627936`, 1.221087710777565}, {
                    3.861684516345906, 1.221087710777565}}}], {
                    RGBColor[0, 1, 0]}, StripOnInput -> False], 
                    StyleBox[
                    
                    FilledCurveBox[{{{0, 2, 1}, {1, 6, 3}, {0, 1, 1}, {1, 6, 
                    3}}}, {{{3.161414693926297, 0.25562312302028173`}, {
                    3.2325198321193045`, 0.25562312302028173`}, {
                    3.252155021002417, 0.25562312302028173`}, {
                    3.268072401215808, 0.2715405636730709}, {
                    3.268072401215808, 0.2911756921167855}, {
                    3.268072401215808, 0.31081082056050013`}, {
                    3.252155021002417, 0.3267282612132893}, {
                    3.2325198321193045`, 0.3267282612132893}, {
                    3.161414693926297, 0.3267282612132893}, {
                    3.1417795050431847`, 0.3267282612132893}, {
                    3.1258621248297933`, 0.31081082056050013`}, {
                    3.1258621248297933`, 0.2911756921167855}, {
                    3.1258621248297933`, 0.2715405636730709}, {
                    3.1417795050431847`, 0.25562312302028173`}, {
                    3.161414693926297, 0.25562312302028173`}}}], {
                    RGBColor[0, 1, 0]}, StripOnInput -> False]}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False]], {
                  FormatType -> TraditionalForm, FrameTicks -> None, 
                   DefaultBaseStyle -> {
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Simplified Diagram"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Integrand", 
                  Style[
                  "Integrand", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Integrand"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Integrand"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   FractionBox["1", "24"], " ", 
                   SuperscriptBox[
                    RowBox[{"\[ScriptCapitalB]", "[", 
                    RowBox[{"\[ScriptQ][2]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{"\[ScriptQ][1]"}], "]"}], "3"], " ", 
                   RowBox[{"\[ScriptCapitalG]", "[", 
                    RowBox[{
                    RowBox[{"\[ScriptQ][1]"}], "+", 
                    RowBox[{"\[ScriptQ][2]"}]}], "]"}], " ", 
                   RowBox[{"\[ScriptCapitalS]", "[", 
                    RowBox[{"\[ScriptQ][1]"}], "]"}]}], FontFamily -> 
                 Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Integrand"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Value"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  TemplateBox[{
                    RowBox[{"-", "0.35237908727173759877`19.54701012632348"}],
                     "1.00000000000000007154`1.550228353055094*^-18"}, 
                   "Around", SyntaxForm -> PlusMinus], 
                  Around[-0.35237908727173759877`19.54701012632348, 1.*^-18]],
                  FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
    "c4e3565a-2652-42dc-b00a-6b31e3b65d11"][{
      Key["Simplified Diagram"]}, "Item", False]}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{491., {381.3544921875, 386.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{491., {381.3544921875, 386.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8819241755186872`*^9, 3.885030165715865*^9},
 CellLabel->"Out[103]=",
 CellID->646566127,ExpressionUUID->"0521c7f2-aa7b-4c7f-9c5f-2d64a0caf743"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 799},
WindowMargins->{{0, Automatic}, {Automatic, 30}},
TaggingRules-><|
 "Author" -> "gabriele", "CreationDate" -> "08-16-2022 12:19:05", 
  "TryRealOnly" -> False, "Paclet" -> "None"|>,
CellContext->"Global`",
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 16, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"74946ae4-44ff-434a-9006-48e666e4446a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[151072, 2937, 155, 2, 58, "ExtendedExamplesSection",ExpressionUUID->"3ad38541-4a30-4c0b-8778-31c5109f4c66",
   CellTags->"ExtendedExamples",
   CellID->2078562862]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 380235, 7273}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 597, 14, 26, "History",ExpressionUUID->"0b4f210c-0002-4d2d-9c46-dc984e1b7fc9",
 CellID->96728299],
Cell[1158, 36, 141, 1, 21, "AuthorDate",ExpressionUUID->"d64e5682-64d0-4777-9c53-b1879f14c5a2",
 CellID->1440471419],
Cell[CellGroupData[{
Cell[1324, 41, 123, 1, 21, "CategorizationSection",ExpressionUUID->"332a02a8-1889-452d-9256-69df41924a89",
 CellID->1140765734],
Cell[1450, 44, 134, 2, 35, "Categorization",ExpressionUUID->"44b5ebfd-52de-4422-8d1f-372c260139ed",
 CellID->981109142],
Cell[1587, 48, 144, 2, 35, "Categorization",ExpressionUUID->"056d82e3-606c-482d-97b5-8a1e5f1e5622",
 CellID->244040381],
Cell[1734, 52, 142, 2, 35, "Categorization",ExpressionUUID->"2b64af09-011f-42e8-8c66-f5e3b839021c",
 CellID->1232494520],
Cell[1879, 56, 159, 2, 35, "Categorization",ExpressionUUID->"cb4b3202-d982-4c14-9ce6-f3790cfd29ed",
 CellID->776075125]
}, Open  ]],
Cell[CellGroupData[{
Cell[2075, 63, 111, 1, 31, "KeywordsSection",ExpressionUUID->"39de9dc7-99ac-4af3-8386-db42f6d34bc8",
 CellID->1961105960],
Cell[2189, 66, 100, 1, 21, "Keywords",ExpressionUUID->"e3ef3d28-22e2-497a-90dc-92330c3e11c8",
 CellID->1856733639]
}, Open  ]],
Cell[CellGroupData[{
Cell[2326, 72, 120, 1, 31, "TemplatesSection",ExpressionUUID->"45ea89b2-ef66-46c3-aec1-ddad1fb91ad9",
 CellID->1945224799],
Cell[2449, 75, 149, 2, 30, "Template",ExpressionUUID->"2e75aa7c-e1d8-4754-863d-069f8f499789",
 CellID->1442748066],
Cell[2601, 79, 138, 2, 30, "Template",ExpressionUUID->"37a7dedf-1878-4b50-b389-f4e7ec1fddb4",
 CellID->1369601893],
Cell[2742, 83, 136, 2, 30, "Template",ExpressionUUID->"d9732724-e1c8-49bb-a1a1-efb45aa68f2f",
 CellID->1433078531],
Cell[2881, 87, 137, 2, 30, "Template",ExpressionUUID->"ed197f11-db8b-4bcb-9197-4f1eea6ea283",
 CellID->495006799]
}, Open  ]],
Cell[CellGroupData[{
Cell[3055, 94, 116, 1, 74, "ObjectName",ExpressionUUID->"5e071591-0445-4362-9990-e16c105a8510",
 CellID->1822639282],
Cell[3174, 97, 2778, 69, 187, "Usage",ExpressionUUID->"cb195864-f3d7-44d9-8507-b3294b5987f2",
 CellID->1850102269],
Cell[5955, 168, 218, 3, 27, "Notes",ExpressionUUID->"88619ea5-6830-4472-87d4-c9371689862b",
 CellID->575916847],
Cell[6176, 173, 1153, 22, 63, "3ColumnTableMod",ExpressionUUID->"d13dd38d-5c00-4280-8e60-7a72a5135560",
 CellID->1248472906],
Cell[7332, 197, 347, 8, 27, "Notes",ExpressionUUID->"bee18058-31b0-4b9c-89f6-07054edbaca9",
 CellID->212215023],
Cell[7682, 207, 906, 16, 61, "2ColumnTableMod",ExpressionUUID->"acf7e9ac-6f50-46e1-89ab-040ed651ddbb",
 CellID->1891466392],
Cell[8591, 225, 317, 8, 27, "Notes",ExpressionUUID->"8a374683-6a27-491b-b2f2-d3d1c1ff3b03",
 CellID->1272902334],
Cell[8911, 235, 928, 16, 61, "2ColumnTableMod",ExpressionUUID->"e30504ce-a509-43c2-8d49-7089f75c9cb9",
 CellID->957078751],
Cell[9842, 253, 466, 10, 28, "Notes",ExpressionUUID->"fefaec85-28d2-4607-b36b-e91dfe1b89a3",
 CellID->824107932]
}, Open  ]],
Cell[CellGroupData[{
Cell[10345, 268, 114, 1, 47, "TechNotesSection",ExpressionUUID->"3e2cd55f-c175-4aed-941a-992de98a8448",
 CellID->1055865968],
Cell[10462, 271, 305, 5, 19, "Tutorials",ExpressionUUID->"be4ae7a8-6e21-473c-9712-ccf734762df8",
 CellID->470718188],
Cell[10770, 278, 365, 7, 19, "Tutorials",ExpressionUUID->"519d3bdc-a18c-431b-a9bf-e69e732f8004",
 CellID->761534299]
}, Open  ]],
Cell[CellGroupData[{
Cell[11172, 290, 138, 1, 34, "RelatedDemonstrationsSection",ExpressionUUID->"f2a00c47-e2bb-499d-bdf0-1ad3179c719f",
 CellID->1135641973],
Cell[11313, 293, 113, 1, 19, "RelatedDemonstrations",ExpressionUUID->"084c7ec0-1042-4809-80d1-fad8683212be",
 CellID->1607052338]
}, Open  ]],
Cell[CellGroupData[{
Cell[11463, 299, 120, 1, 34, "RelatedLinksSection",ExpressionUUID->"5695bab4-bb51-42db-a128-ce16256fef9f",
 CellID->1105271984],
Cell[11586, 302, 102, 1, 19, "RelatedLinks",ExpressionUUID->"3ac8f260-8d97-4e15-a59e-8ee336a48c4b",
 CellID->80557085]
}, Open  ]],
Cell[CellGroupData[{
Cell[11725, 308, 110, 1, 34, "SeeAlsoSection",ExpressionUUID->"19affa99-553c-48b5-aee6-ead0e43971fb",
 CellID->1589544632],
Cell[11838, 311, 367, 8, 22, "SeeAlso",ExpressionUUID->"89a9ed5d-5e6a-4daf-8562-23323fc8df5c",
 CellID->1280782454],
Cell[12208, 321, 379, 8, 22, "SeeAlso",ExpressionUUID->"575b65a8-62df-40d7-876e-1ce11298785f",
 CellID->159419783],
Cell[12590, 331, 389, 8, 22, "SeeAlso",ExpressionUUID->"b6d3d9b0-bafb-443d-bf5f-070ecd9e4ea3",
 CellID->676245751],
Cell[12982, 341, 370, 8, 22, "SeeAlso",ExpressionUUID->"39017421-d359-4b31-a7c7-fbf8dee2338b",
 CellID->1114387251],
Cell[13355, 351, 380, 8, 22, "SeeAlso",ExpressionUUID->"d55f33dd-2824-4361-859a-b8f3fe1e03a9",
 CellID->1196792586],
Cell[13738, 361, 358, 8, 22, "SeeAlso",ExpressionUUID->"59afdbdb-f529-459c-8984-ea2a887aa22f",
 CellID->16121505],
Cell[14099, 371, 362, 8, 22, "SeeAlso",ExpressionUUID->"91bbbab6-8ebb-459a-b322-d245d6220d5c",
 CellID->1633265002]
}, Open  ]],
Cell[CellGroupData[{
Cell[14498, 384, 184, 2, 34, "MoreAboutSection",ExpressionUUID->"78f9aa64-a828-4b3a-9e8c-afb2ac93e0da",
 CellID->2141199699],
Cell[14685, 388, 101, 1, 19, "MoreAbout",ExpressionUUID->"c8cbb1c7-f7a4-4830-9177-1374ffedaf22",
 CellID->1910053517]
}, Open  ]],
Cell[CellGroupData[{
Cell[14823, 394, 411, 11, 73, "PrimaryExamplesSection",ExpressionUUID->"8a7696d1-c791-40ee-9ae7-8d170dcc5ac1",
 CellID->599104050],
Cell[15237, 407, 180, 3, 27, "Input",ExpressionUUID->"7aa46f7f-2051-4d8c-ba42-0dbab35cbef8",
 CellID->337745299],
Cell[15420, 412, 202, 2, 24, "ExampleText",ExpressionUUID->"01de6e26-5791-40c4-b292-d63c00f1bca9",
 CellID->220034425],
Cell[CellGroupData[{
Cell[15647, 418, 360, 7, 27, "Input",ExpressionUUID->"a4c8403a-8a3b-4910-a12a-0440cba3ff65",
 CellID->1588595559],
Cell[16010, 427, 42697, 785, 386, "Output",ExpressionUUID->"57499ba7-9e9e-4b80-916a-2b83c35bdd1e",
 CellID->1700021695]
}, Open  ]],
Cell[58722, 1215, 242, 4, 24, "ExampleText",ExpressionUUID->"35717527-6390-4eec-bd86-50dfba31f0d6",
 CellID->1425865463],
Cell[CellGroupData[{
Cell[58989, 1223, 241, 4, 27, "Input",ExpressionUUID->"4233c141-947a-4502-8beb-a3f77ba775bc",
 CellID->661138279],
Cell[59233, 1229, 288, 4, 26, "Output",ExpressionUUID->"0fa27bf7-a0e3-4539-8a4a-b65fe0972da7",
 CellID->821459548]
}, Open  ]],
Cell[CellGroupData[{
Cell[59558, 1238, 286, 5, 27, "Input",ExpressionUUID->"f6c245a2-7033-48c4-9d65-8155723031f8",
 CellID->2032435858],
Cell[59847, 1245, 292, 5, 26, "Output",ExpressionUUID->"254b0cba-aa56-48c3-ab50-82b0cec92202",
 CellID->2143826009]
}, Open  ]],
Cell[60154, 1253, 286, 3, 24, "ExampleText",ExpressionUUID->"423f3bcd-5554-456d-b8de-1cca8b5547fd",
 CellID->468305460],
Cell[CellGroupData[{
Cell[60465, 1260, 319, 6, 27, "Input",ExpressionUUID->"b77a04ea-0191-4f38-a983-1b398d25af87",
 CellID->779569763],
Cell[60787, 1268, 43649, 801, 424, "Output",ExpressionUUID->"9ab9947c-468a-4263-87ea-1bf232b78317",
 CellID->173204240]
}, Open  ]],
Cell[104451, 2072, 400, 5, 24, "ExampleText",ExpressionUUID->"a42c3ece-d4c6-4c21-976b-636e2a43dcf3",
 CellID->1009250530],
Cell[CellGroupData[{
Cell[104876, 2081, 3842, 71, 74, "Input",ExpressionUUID->"81146a86-fffa-4068-98bc-4697b4261965",
 CellID->589141683],
Cell[108721, 2154, 42302, 777, 446, "Output",ExpressionUUID->"e0130eb0-7da2-49dc-9847-d12e7c2dc170",
 CellID->1667596251]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151072, 2937, 155, 2, 58, "ExtendedExamplesSection",ExpressionUUID->"3ad38541-4a30-4c0b-8778-31c5109f4c66",
 CellTags->"ExtendedExamples",
 CellID->2078562862],
Cell[151230, 2941, 242, 5, 35, "ExampleSection",ExpressionUUID->"8b620c16-fc41-49dd-a09b-ff68c08387d7",
 CellID->1635126686],
Cell[151475, 2948, 265, 5, 23, "ExampleSection",ExpressionUUID->"f6f96435-24bb-492f-9a39-41df199ea03b",
 CellID->1505444822],
Cell[CellGroupData[{
Cell[151765, 2957, 243, 5, 23, "ExampleSection",ExpressionUUID->"a8724169-0fd5-48e9-a9ee-dc226020072a",
 CellID->524881913],
Cell[CellGroupData[{
Cell[152033, 2966, 260, 5, 26, "ExampleSubsection",ExpressionUUID->"3711c9e3-3196-4e8c-9008-02de43e4de6f",
 CellID->1959725063],
Cell[CellGroupData[{
Cell[152318, 2975, 313, 6, 27, "Input",ExpressionUUID->"f3a4118d-933e-4dd1-a37b-1491e8fd5e5a",
 CellID->437168556],
Cell[152634, 2983, 49278, 912, 498, "Output",ExpressionUUID->"0cb9d7b4-816f-49d4-a610-970f0011df62",
 CellID->831036455]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201961, 3901, 259, 5, 26, "ExampleSubsection",ExpressionUUID->"d2b7e87a-3c2f-4bb7-8fef-0ec647d79cc4",
 CellID->708957001],
Cell[CellGroupData[{
Cell[202245, 3910, 352, 7, 27, "Input",ExpressionUUID->"ab0e236d-e355-41a2-ac75-9b9fb102498f",
 CellID->2147435664],
Cell[202600, 3919, 55210, 1029, 770, "Output",ExpressionUUID->"f6618269-d052-42ad-a683-8d3a7e0d7401",
 CellID->1685626089]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257859, 4954, 253, 5, 26, "ExampleSubsection",ExpressionUUID->"33e620f1-07ef-40a8-a3c9-4782343243d1",
 CellID->1024248470],
Cell[CellGroupData[{
Cell[258137, 4963, 340, 6, 27, "Input",ExpressionUUID->"3d7a9a48-8c12-487f-a1b1-a9cd7fe274f7",
 CellID->2111846992],
Cell[258480, 4971, 52526, 982, 500, "Output",ExpressionUUID->"5789e530-4bf5-49f9-bb68-a1e51155dc84",
 CellID->1707594812]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[311045, 5958, 247, 5, 35, "ExampleSection",ExpressionUUID->"137db795-c8bd-42de-8de9-34c50d526ec6",
 CellID->14234766],
Cell[311295, 5965, 259, 5, 23, "ExampleSection",ExpressionUUID->"1a1530ea-4595-425a-bf4d-0008b5eb8daa",
 CellID->1975895366],
Cell[311557, 5972, 252, 5, 23, "ExampleSection",ExpressionUUID->"c3e0fa73-40ec-460d-80af-406ff165f2dc",
 CellID->1731221428],
Cell[311812, 5979, 256, 5, 23, "ExampleSection",ExpressionUUID->"6765bbc2-825e-48fe-a984-738293cabbcb",
 CellID->790309891],
Cell[CellGroupData[{
Cell[312093, 5988, 250, 5, 23, "ExampleSection",ExpressionUUID->"ab68aad3-cecf-4ac3-871f-f6250836a3b3",
 CellID->1789517678],
Cell[312346, 5995, 299, 4, 24, "ExampleText",ExpressionUUID->"7c9d99af-603a-4075-b004-5565bfc0cad5",
 CellID->738952901],
Cell[CellGroupData[{
Cell[312670, 6003, 519, 9, 47, "Input",ExpressionUUID->"2c015833-44fb-4e18-b637-c061dc1b2c0d",
 CellID->1274420237],
Cell[313192, 6014, 66417, 1238, 780, "Output",ExpressionUUID->"0521c7f2-aa7b-4c7f-9c5f-2d64a0caf743",
 CellID->646566127]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

