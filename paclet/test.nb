(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     68355,       1379]
NotebookOptionsPosition[     66129,       1332]
NotebookOutlinePosition[     66525,       1348]
CellTagsIndexPosition[     66482,       1345]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908944410145484*^9, 3.9089444612082357`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5114b3d8-3bb2-45a3-9fb7-3bcfeb751b7d"],

Cell[BoxData["\<\"/Users/giacomosberveglieri/Dropbox/phi4-3D/Paclet_upload/v1.\
1/Phi4tools-master\"\>"], "Output",
 CellChangeTimes->{3.908944462292226*^9, 3.908944814034095*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"54aa9997-6f9a-422e-874d-a5d41bc06494"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  "\"\</Users/giacomosberveglieri/Dropbox/phi4-3D/Paclet_upload/v1.1/\
Phi4tools-master/build/GSberveglieri__Phi4tools-1.0.1.paclet\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.908944469450939*^9, 3.908944511199877*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8b76832a-b597-4a4b-a61d-db067bcb3151"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.908944480714652*^9, 3.9089445167821302`*^9, {3.908944808273288*^9, 
   3.908944815565324*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"2bfd5ea2-f73a-46d0-9fa0-177107184bc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.9089445212526093`*^9, 3.9089445385169287`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"86be5ba6-fe85-4ad3-98a8-ae0e5c6d30e6"],

Cell[BoxData[
 RowBox[{"Needs", "[", 
  InterpretationBox[
   RowBox[{
    TagBox["PacletObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.0416667], {
                FaceForm[{
                  RGBColor[0.961, 0.961, 0.961], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454,
                  22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                 12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                 4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                 4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                 12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
                FaceForm[{
                  RGBColor[0.898, 0.898, 0.898], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                 14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                 8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                 6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                 6.0399}, {7., 8.1169}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                 3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                 4.1733}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                 19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                 13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 
                 19.8602}, {6.875, 19.8602}, {6.875, 14.1392}, {1.952, 
                 12.0742}, {2.048, 11.8432}, {7., 13.9202}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                 11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                 11.9996, 21.4153}}}]}, {
                FaceForm[{
                  RGBColor[0.749, 0.749, 0.749], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                  3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                  19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                  20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                  12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                  19.5274}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                 5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                  9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                  12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 
                  10.1943}, {15.707, 9.8613}, {16.5, 9.5283}, {16.5, 
                  4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {
                  17., 3.5143}, {22.5, 5.8223}, {22.5, 12.2913}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                  11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                  7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                  10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                  1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                  4.0576}, {7.5, 4.3906}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                  19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                  10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                  15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                  15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                  18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                  11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                  17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                  19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                  11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 
                  15.332}, {16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {
                  17., 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                  2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                  2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                  7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995,
                   8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                  10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                  1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
                FaceForm[{
                  RGBColor[0.965, 0.765, 0.749], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                 9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                 15.5856}}}]}, {
                FaceForm[{
                  RGBColor[0.91, 0.655, 0.635], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                 17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                 9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                 17.048, 9.9757}, {12.125, 12.0407}}}]}, {
                FaceForm[{
                  RGBColor[0.867, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                  16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                  8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                  14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                  18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                  17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
              Automatic, ImageSize -> {24., 24.}, 
              PlotRange -> {{0., 24.}, {0., 24.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"GSberveglieri/Phi4tools\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"1.0.1\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.0416667], {
                FaceForm[{
                  RGBColor[0.961, 0.961, 0.961], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454,
                  22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                 12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                 4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                 4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                 12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
                FaceForm[{
                  RGBColor[0.898, 0.898, 0.898], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                 14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                 8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                 6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                 6.0399}, {7., 8.1169}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                 3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                 4.1733}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                 19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                 13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 
                 19.8602}, {6.875, 19.8602}, {6.875, 14.1392}, {1.952, 
                 12.0742}, {2.048, 11.8432}, {7., 13.9202}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                 11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                 11.9996, 21.4153}}}]}, {
                FaceForm[{
                  RGBColor[0.749, 0.749, 0.749], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                  3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                  19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                  20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                  12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                  19.5274}}}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                 5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                  9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                  12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 
                  10.1943}, {15.707, 9.8613}, {16.5, 9.5283}, {16.5, 
                  4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {
                  17., 3.5143}, {22.5, 5.8223}, {22.5, 12.2913}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                  11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                  7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                  10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                  1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                  4.0576}, {7.5, 4.3906}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                  19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                  10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                  15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                  15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                  18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                  11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                  17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                  19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                  11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 
                  15.332}, {16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {
                  17., 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                  2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                  2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                  7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995,
                   8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                  10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                  1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
                FaceForm[{
                  RGBColor[0.965, 0.765, 0.749], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                 9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                 15.5856}}}]}, {
                FaceForm[{
                  RGBColor[0.91, 0.655, 0.635], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                 17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                 9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                 17.048, 9.9757}, {12.125, 12.0407}}}]}, {
                FaceForm[{
                  RGBColor[0.867, 0.067, 0.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                  16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                  8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                  14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                  18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                  17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
              Automatic, ImageSize -> {24., 24.}, 
              PlotRange -> {{0., 24.}, {0., 24.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"GSberveglieri/Phi4tools\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"1.0.1\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"/Users/giacomosberveglieri/Library/Mathematica/Paclets/\
Repository/GSberveglieri__Phi4tools-1.0.1\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                   "\"A collection of tools for Feynman diagrams in scalar \
field theories\"", Short], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   PacletObject[<|
    "Name" -> "GSberveglieri/Phi4tools", "Description" -> 
     "A collection of tools for Feynman diagrams in scalar field theories", 
     "Creator" -> "Giacomo Sberveglieri, Gabriele Spada", "License" -> "MIT", 
     "PublisherID" -> "GSberveglieri", "Version" -> "1.0.1", "WolframVersion" -> 
     "13.0+", "PrimaryContext" -> "GSberveglieri`Phi4tools`", 
     "Extensions" -> {{
       "Kernel", "Root" -> "Kernel", 
        "Context" -> {{"GSberveglieri`Phi4tools`", "Phi4tools.wl"}}, 
        "Symbols" -> {
         "GSberveglieri`Phi4tools`BubbleSubdiagram", 
          "GSberveglieri`Phi4tools`CountLoops", 
          "GSberveglieri`Phi4tools`DeriveAndWriteExplicit", 
          "GSberveglieri`Phi4tools`DrawGraph", 
          "GSberveglieri`Phi4tools`ExternalMomentum", 
          "GSberveglieri`Phi4tools`InformationDiagram", 
          "GSberveglieri`Phi4tools`IntegrandDiagram", 
          "GSberveglieri`Phi4tools`Momentum", 
          "GSberveglieri`Phi4tools`MomVars", 
          "GSberveglieri`Phi4tools`NComponents", 
          "GSberveglieri`Phi4tools`NickelIndex", 
          "GSberveglieri`Phi4tools`Propagator", 
          "GSberveglieri`Phi4tools`SquareSubdiagram", 
          "GSberveglieri`Phi4tools`SunsetSubdiagram", 
          "GSberveglieri`Phi4tools`SymmetryFactorDiagram", 
          "GSberveglieri`Phi4tools`TadSunsetSubdiagram", 
          "GSberveglieri`Phi4tools`TadTriangleBubblesSubdiagram", 
          "GSberveglieri`Phi4tools`TriangleSubdiagram", 
          "GSberveglieri`Phi4tools`ValueDiagram", 
          "GSberveglieri`Phi4tools`VisualizeDiagram", 
          "GSberveglieri`Phi4tools`WriteExplicit", 
          "GSberveglieri`Phi4tools`XCubicRatio"}}, {
       "Documentation", "Language" -> "English"}, {
       "Resource", "Root" -> "Resources", 
        "Resources" -> {{"EDGES", "EDGES"}, {"FACTORS", "FACTORS"}, {
          "INTEGRANDS", "INTEGRANDS"}, {"VALUES", "VALUES"}}}, {
       "AutoCompletionData", "Root" -> "AutoCompletionData"}}, "Location" -> 
     "/Users/giacomosberveglieri/Library/Mathematica/Paclets/Repository/\
GSberveglieri__Phi4tools-1.0.1"|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Output",
 CellChangeTimes->{3.9089445391076517`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"52af1eaf-5ca6-4f90-bce5-ab4a15a89e84"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<GSberveglieri`Phi4tools`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.908944570659946*^9, 3.9089445706667557`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"76a59abf-c783-4542-885c-d0e80503fd7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InformationDiagram", "[", 
  RowBox[{"4", ",", "0", ",", "4", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.908944577112837*^9, 3.9089445915695477`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"9e9bd872-90e2-45e3-a01a-8a6f8e3df248"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "External Legs" -> 4, "Cubic Vertices" -> 0, "Quartic Vertices" -> 4, 
       "List Number" -> 5, "Nickel Index" -> "ee12|e33|e33||", "Diagram" -> 
       Graph[{"o1", 0, "o2", "o3", 1, "o4", 2, 3}, {
         Null, {{1, 2}, {3, 2}, {4, 5}, {6, 7}, {2, 5}, {2, 7}, {5, 8}, {5, 
          8}, {7, 8}, {7, 8}}}, {
         EdgeStyle -> {UndirectedEdge["o1", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o3", 1] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o2", 0] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]], UndirectedEdge["o4", 2] -> Directive[
              Dashing[{0, Small}], 
              Thickness[Large]]}, GraphLayout -> "SpringEmbedding", 
          VertexSize -> {0.15}}], "Value" -> 
       Rational[4, 3] (-Pi^2 - 32 Log[2] + Log[9] (8 + Log[27]) + 
         24 PolyLog[2, 
            Rational[1, 3]])|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"External Legs"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cubic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Quartic Vertices"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"List Number"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Nickel Index"} -> 
        TypeSystem`PackageScope`AtomShape[156.8], {"Diagram"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"Value"} -> 
        TypeSystem`PackageScope`AtomShape[60]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "External Legs", "Cubic Vertices", "Quartic Vertices", "List Number", 
        "Nickel Index", "Diagram", "Value"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Graph], 
        TypeSystem`Atom[Real]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PaneShape, "Type" -> 
     TypeSystem`Atom[Real], "Path" -> {
       Key["Value"]}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10,
      "DataRowCount" -> 2, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key["Value"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Pane[
               Style[
               Rational[4, 3] (-Pi^2 - 32 Log[2] + Log[9] (8 + Log[27]) + 
                 24 PolyLog[2, 
                    Rational[1, 3]]), FontFamily -> Dynamic[
                  CurrentValue[{"StyleHints", "CodeFont"}]]]], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{456., {33.634033203125, 39.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{456., {33.634033203125, 39.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.908944583315192*^9, 3.9089445921378803`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"f381f238-70aa-485b-9a95-80a23bb5305c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ValueDiagram", "[", 
  RowBox[{"4", ",", "0", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.9089446030912733`*^9, 3.90894462547227*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"be7788d5-8bf8-40d4-9f27-0fbb6f8b6d25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox["8", "3"], ",", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"8", " ", 
       RowBox[{"Log", "[", "2", "]"}]}], "+", 
      RowBox[{"Log", "[", "81", "]"}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["64", "3"], " ", 
    RowBox[{"Log", "[", 
     FractionBox["4", "3"], "]"}]}], ",", 
   RowBox[{
    FractionBox["4", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Pi]", "2"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"Log", "[", "2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Log", "[", "9", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{"Log", "[", "27", "]"}]}], ")"}]}], "+", 
      RowBox[{"24", " ", 
       RowBox[{"PolyLog", "[", 
        RowBox[{"2", ",", 
         FractionBox["1", "3"]}], "]"}]}]}], ")"}]}], ",", "1", ",", 
   RowBox[{
    FractionBox["4", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Pi]", "2"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"Log", "[", "2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Log", "[", "9", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{"Log", "[", "27", "]"}]}], ")"}]}], "+", 
      RowBox[{"24", " ", 
       RowBox[{"PolyLog", "[", 
        RowBox[{"2", ",", 
         FractionBox["1", "3"]}], "]"}]}]}], ")"}]}], ",", 
   InterpretationBox[
    TemplateBox[{
     "0.463734961765340647270682712308442580303488902129863459`51.\
66626983932774", "1.000000000000000007616223706`1.550228353055094*^-50"},
     "Around"],
    Around[
    0.463734961765340647270682712308442580303488902129863459`53.\
66626983932774, 1.*^-50]]}], "}"}]], "Output",
 CellChangeTimes->{{3.9089446074184*^9, 3.9089446257157917`*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"7d8b52d1-3ff6-4613-abde-2183ac7f7015"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ValueDiagram", "[", 
  RowBox[{"2", ",", "0", ",", "3", ",", 
   RowBox[{"\"\<Derivative\>\"", "->", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.90894463339887*^9, 3.908944651151175*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"842389b5-28b0-487a-9556-7eab8266788f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    FractionBox["4", "27"], " ", 
    RowBox[{"(", 
     RowBox[{"8", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Pi]", "2"]}], "+", 
      RowBox[{"64", " ", 
       RowBox[{"Log", "[", "2", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "3", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"16", "+", 
         RowBox[{"9", " ", 
          RowBox[{"Log", "[", "3", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"72", " ", 
       RowBox[{"PolyLog", "[", 
        RowBox[{"2", ",", 
         FractionBox["1", "3"]}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.90894464601989*^9, 3.90894465147978*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"9fc44f64-f5f4-4303-b96c-daea2359bccf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"-", "0.1893028638888878`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.90894464601989*^9, 3.908944651482833*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"c8837c33-decb-4a4d-b8a3-e4257fff9b76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "ValueDiagram"}]], "Input",
 CellChangeTimes->{{3.908944683487411*^9, 3.908944683592081*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"353f06c8-f4d1-4d19-9858-8e61715ed469"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:GSberveglieri/Phi4tools/ref/ValueDiagram",
              ButtonNote->"paclet:GSberveglieri/Phi4tools/ref/ValueDiagram"],
             "\"paclet:GSberveglieri/Phi4tools/ref/ValueDiagram\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ValueDiagram[n, v3, v4, d] gives the \
three-dimensional integrated value of the d-th Feynman diagram of the n-point \
function with v3 cubic vertices and v4 quartic vertices\\nValueDiagram[n, v3, \
v4, d] the list of three-dimensional integrated values of the Feynman diagram \
for the n-point function with v3 cubic vertices and v4 quartic vertices\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:GSberveglieri/Phi4tools/ref/ValueDiagram", 
                    "paclet:GSberveglieri/Phi4tools/ref/ValueDiagram", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"\<\"Derivative\"\>", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "ReadProtected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"GSberveglieri`Phi4tools`ValueDiagram\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:GSberveglieri/Phi4tools/ref/ValueDiagram",
              ButtonNote->"paclet:GSberveglieri/Phi4tools/ref/ValueDiagram"],
             "\"paclet:GSberveglieri/Phi4tools/ref/ValueDiagram\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ValueDiagram[n, v3, v4, d] gives the \
three-dimensional integrated value of the d-th Feynman diagram of the n-point \
function with v3 cubic vertices and v4 quartic vertices\\nValueDiagram[n, v3, \
v4, d] the list of three-dimensional integrated values of the Feynman diagram \
for the n-point function with v3 cubic vertices and v4 quartic vertices\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ValueDiagram[n, v3, v4, d] gives the three-dimensional integrated value \
of the d-th Feynman diagram of the n-point function with v3 cubic vertices \
and v4 quartic vertices\nValueDiagram[n, v3, v4, d] the list of \
three-dimensional integrated values of the Feynman diagram for the n-point \
function with v3 cubic vertices and v4 quartic vertices", 
    "Documentation" -> <|
     "Local" -> "paclet:GSberveglieri/Phi4tools/ref/ValueDiagram"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> {"Derivative" -> False}, 
    "Attributes" -> {ReadProtected}, "FullName" -> 
    "GSberveglieri`Phi4tools`ValueDiagram"|>, True]]], "Output",
 CellChangeTimes->{3.908944684222239*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"93abdfcc-a929-43c8-a295-d8ef8bb73cec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"8", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Pi]", "2"]}], "+", 
      RowBox[{"64", " ", 
       RowBox[{"Log", "[", "2", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "3", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"16", "+", 
         RowBox[{"9", " ", 
          RowBox[{"Log", "[", "3", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"72", " ", 
       RowBox[{"PolyLog", "[", 
        RowBox[{"2", ",", 
         FractionBox["1", "3"]}], "]"}]}]}], ")"}], " ", 
    SuperscriptBox["g", "3"]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Pi]", "3"]}]]}]], "Input",
 CellChangeTimes->{{3.908944882328603*^9, 3.908944882711788*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"3a070e09-a891-4b16-b1f4-97bfc6734d0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.020605413936428132`"}], " ", 
  SuperscriptBox["g", "3"]}]], "Output",
 CellChangeTimes->{3.908944883046916*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"5d5a8977-3eae-4425-9c12-c8e09244a8a9"]
}, Open  ]]
},
WindowSize->{927, 995},
WindowMargins->{{Automatic, -1751}, {31, Automatic}},
FrontEndVersion->"13.3 for Mac OS X x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"87ac5384-be56-43ad-a176-b51e335ee467"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 250, 4, 30, "Input",ExpressionUUID->"5114b3d8-3bb2-45a3-9fb7-3bcfeb751b7d"],
Cell[833, 28, 257, 3, 34, "Output",ExpressionUUID->"54aa9997-6f9a-422e-874d-a5d41bc06494"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127, 36, 347, 6, 52, "Input",ExpressionUUID->"8b76832a-b597-4a4b-a61d-db067bcb3151"],
Cell[1477, 44, 231, 4, 34, "Output",ExpressionUUID->"2bfd5ea2-f73a-46d0-9fa0-177107184bc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1745, 53, 206, 3, 30, "Input",ExpressionUUID->"86be5ba6-fe85-4ad3-98a8-ae0e5c6d30e6"],
Cell[1954, 58, 24594, 427, 61, "Output",ExpressionUUID->"52af1eaf-5ca6-4f90-bce5-ab4a15a89e84"]
}, Open  ]],
Cell[26563, 488, 235, 3, 30, "Input",ExpressionUUID->"76a59abf-c783-4542-885c-d0e80503fd7b"],
Cell[CellGroupData[{
Cell[26823, 495, 260, 4, 30, "Input",ExpressionUUID->"9e9bd872-90e2-45e3-a01a-8a6f8e3df248"],
Cell[27086, 501, 21373, 372, 93, "Output",ExpressionUUID->"f381f238-70aa-485b-9a95-80a23bb5305c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48496, 878, 244, 4, 30, "Input",ExpressionUUID->"be7788d5-8bf8-40d4-9f27-0fbb6f8b6d25"],
Cell[48743, 884, 1942, 58, 117, "Output",ExpressionUUID->"7d8b52d1-3ff6-4613-abde-2183ac7f7015"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50722, 947, 352, 7, 52, "Input",ExpressionUUID->"842389b5-28b0-487a-9556-7eab8266788f"],
Cell[51077, 956, 790, 22, 49, "Output",ExpressionUUID->"9fc44f64-f5f4-4303-b96c-daea2359bccf"],
Cell[51870, 980, 256, 5, 34, "Output",ExpressionUUID->"c8837c33-decb-4a4d-b8a3-e4257fff9b76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52163, 990, 201, 3, 30, "Input",ExpressionUUID->"353f06c8-f4d1-4d19-9858-8e61715ed469"],
Cell[52367, 995, 12628, 298, 248, "Output",ExpressionUUID->"93abdfcc-a929-43c8-a295-d8ef8bb73cec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65032, 1298, 845, 24, 59, "Input",ExpressionUUID->"3a070e09-a891-4b16-b1f4-97bfc6734d0c"],
Cell[65880, 1324, 233, 5, 34, "Output",ExpressionUUID->"5d5a8977-3eae-4425-9c12-c8e09244a8a9"]
}, Open  ]]
}
]
*)

